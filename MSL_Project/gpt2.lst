TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   1
gpt2

 LOC CODE        LINE   SOURCELINE

                     1   ; TASKING C166/ST10 C compiler v8.7r1 Build 775
                     2   ; options: -e -Id:\programme\tasking\c166 v8.7r1\include -x2 -Bhoeufmknladij -OB
                     3   ;          -OE -zswitch_tabmem_default -zautobitastruct-4 -zautobita-0 -FSC -A1
                     4   ;          -zvolatile_union -O0 -g -newerr -s -i0 -Ms
                     5   $DEBUG
                     6   $NOLOCALS
                     7   $EXTEND2
                     8   $NOMOD166
                     9   $STDNAMES(regsuper10bo.def)
                    10   $EXTMAC
                    11   $CASE
                    12   $NOEXPANDREGBANK
                    13   $MODEL(SMALL)
                    14           NAME    GPT2_C
                    15           ?SYMB   'gpt2.c',32,80,16
                    16           ?SYMB   '',1,82,0
                    17           ?SYMB   '80166',0,84,0
                    18           ?SYMB   '',0,81,0
                    19           ?SYMB   'void',00H,45,1
                    20           ?SYMB   'char',080000H,45,2
                    21           ?SYMB   'unsigned char',080000H,45,3
                    22           ?SYMB   'short',0100000H,45,4
                    23           ?SYMB   'unsigned short',0100000H,45,5
                    24           ?SYMB   'long',0200000H,45,6
                    25           ?SYMB   'unsigned long',0200000H,45,7
                    26           ?SYMB   'float',0200000H,45,10
                    27           ?SYMB   'double',0400000H,45,11
                    28           ?SYMB   'int',0100000H,45,16
                    29           ?SYMB   'unsigned int',0100000H,45,18
                    30           ?SYMB   'bit',010000H,7,256
                    31           ?SYMB   'gpt2.c',0,29,1
                    32           ?SYMB   '',0,86,1
                    33   ; gpt2.c      1 //****************************************************************************
                    34   ; gpt2.c      2 // @Module        General Purpose Timer Unit (GPT2)
                    35   ; gpt2.c      3 // @Filename      GPT2.C
                    36   ; gpt2.c      4 // @Project       DAvE_config.dav
                    37   ; gpt2.c      5 //----------------------------------------------------------------------------
                    38   ; gpt2.c      6 // @Controller    Infineon XE167F-96F66
                    39   ; gpt2.c      7 //
                    40   ; gpt2.c      8 // @Compiler      Tasking Classic
                    41   ; gpt2.c      9 //
                    42   ; gpt2.c     10 // @Codegenerator 2.2
                    43   ; gpt2.c     11 //
                    44   ; gpt2.c     12 // @Description   This file contains functions that use the GPT2 module.
                    45   ; gpt2.c     13 //
                    46   ; gpt2.c     14 //----------------------------------------------------------------------------
                    47   ; gpt2.c     15 // @Date          23.09.2021 17:39:33
                    48   ; gpt2.c     16 //
                    49   ; gpt2.c     17 //****************************************************************************
                    50   ; gpt2.c     18 
                    51   ; gpt2.c     19 // USER CODE BEGIN (GPT2_General,1)
                    52   ; gpt2.c     20 
                    53   ; gpt2.c     21 // USER CODE END
                    54   ; gpt2.c     22 
                    55   ; gpt2.c     23 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   2
gpt2

 LOC CODE        LINE   SOURCELINE

                    56   ; gpt2.c     24 
                    57   ; gpt2.c     25 //****************************************************************************
                    58   ; gpt2.c     26 // @Project Includes
                    59   ; gpt2.c     27 //****************************************************************************
                    60   ; gpt2.c     28 
                    61   ; gpt2.c     29 #include "MAIN.H"
                    62           ?SYMB   'MAIN.H',0,29,2
                    63           ?SYMB   '',0,86,2
                    64           ?SYMB   'XE16xREGS.H',0,29,3
                    65           ?SYMB   '',0,86,3
                    66           ?SYMB   '',0,86,2
                    67           ?SYMB   'SCS.H',0,29,3
                    68           ?SYMB   '',0,86,3
                    69           ?SYMB   'T$2',0,14,257
                    70           ?SYMB   'SCS_EXTCLK_F_SYS',0,33,257
                    71           ?SYMB   'SCS_EXTCLK_F_OUT',1,33,257
                    72           ?SYMB   'SCS_EXTCLK_F_PLL',2,33,257
                    73           ?SYMB   'SCS_EXTCLK_F_OSC',3,33,257
                    74           ?SYMB   'SCS_EXTCLK_F_WU',4,33,257
                    75           ?SYMB   'SCS_EXTCLK_F_TCK',5,33,257
                    76           ?SYMB   'SCS_EXTCLK_F_OSC_FL',6,33,257
                    77           ?SYMB   'SCS_EXTCLK_F_RTC',8,33,257
                    78           ?SYMB   '',16,16,0
                    79           ?SYMB   'SCS_EXTCLK_Type',257,13,258
                    80           ?SYMB   '',0,86,2
                    81           ?SYMB   'IO.H',0,29,3
                    82           ?SYMB   '',0,86,3
                    83           ?SYMB   '',0,86,2
                    84           ?SYMB   'GPT1.H',0,29,3
                    85           ?SYMB   '',0,86,3
                    86           ?SYMB   '',0,86,2
                    87           ?SYMB   'GPT2.H',0,29,3
                    88           ?SYMB   '',0,86,3
                    89           ?SYMB   '',0,86,2
                    90           ?SYMB   'CCU63.H',0,29,3
                    91           ?SYMB   '',0,86,3
                    92           ?SYMB   '',0,86,2
                    93           ?SYMB   '',0,86,1
                    94   ; gpt2.c     30 
                    95   ; gpt2.c     31 // USER CODE BEGIN (GPT2_General,2)
                    96   ; gpt2.c     32 
                    97   ; gpt2.c     33 // USER CODE END
                    98   ; gpt2.c     34 
                    99   ; gpt2.c     35 
                   100   ; gpt2.c     36 //****************************************************************************
                   101   ; gpt2.c     37 // @Macros
                   102   ; gpt2.c     38 //****************************************************************************
                   103   ; gpt2.c     39 
                   104   ; gpt2.c     40 // USER CODE BEGIN (GPT2_General,3)
                   105   ; gpt2.c     41 
                   106   ; gpt2.c     42 // USER CODE END
                   107   ; gpt2.c     43 
                   108   ; gpt2.c     44 
                   109   ; gpt2.c     45 //****************************************************************************
                   110   ; gpt2.c     46 // @Defines
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   3
gpt2

 LOC CODE        LINE   SOURCELINE

                   111   ; gpt2.c     47 //****************************************************************************
                   112   ; gpt2.c     48 
                   113   ; gpt2.c     49 // USER CODE BEGIN (GPT2_General,4)
                   114   ; gpt2.c     50 
                   115   ; gpt2.c     51 // USER CODE END
                   116   ; gpt2.c     52 
                   117   ; gpt2.c     53 
                   118   ; gpt2.c     54 //****************************************************************************
                   119   ; gpt2.c     55 // @Typedefs
                   120   ; gpt2.c     56 //****************************************************************************
                   121   ; gpt2.c     57 
                   122   ; gpt2.c     58 // USER CODE BEGIN (GPT2_General,5)
                   123   ; gpt2.c     59 
                   124   ; gpt2.c     60 // USER CODE END
                   125   ; gpt2.c     61 
                   126   ; gpt2.c     62 
                   127   ; gpt2.c     63 //****************************************************************************
                   128   ; gpt2.c     64 // @Imported Global Variables
                   129   ; gpt2.c     65 //****************************************************************************
                   130   ; gpt2.c     66 
                   131   ; gpt2.c     67 // USER CODE BEGIN (GPT2_General,6)
                   132   ; gpt2.c     68         extern  unsigned int index;
                   133   ; gpt2.c     69 // USER CODE END
                   134   ; gpt2.c     70 
                   135   ; gpt2.c     71 
                   136   ; gpt2.c     72 //****************************************************************************
                   137   ; gpt2.c     73 // @Global Variables
                   138   ; gpt2.c     74 //****************************************************************************
                   139   ; gpt2.c     75 
                   140   ; gpt2.c     76 // USER CODE BEGIN (GPT2_General,7)
                   141   ; gpt2.c     77 
                   142   ; gpt2.c     78 // USER CODE END
                   143   ; gpt2.c     79 
                   144   ; gpt2.c     80 
                   145   ; gpt2.c     81 //****************************************************************************
                   146   ; gpt2.c     82 // @External Prototypes
                   147   ; gpt2.c     83 //****************************************************************************
                   148   ; gpt2.c     84 
                   149   ; gpt2.c     85 // USER CODE BEGIN (GPT2_General,8)
                   150   ; gpt2.c     86 
                   151   ; gpt2.c     87 // USER CODE END
                   152   ; gpt2.c     88 
                   153   ; gpt2.c     89 
                   154   ; gpt2.c     90 
                   155   ; gpt2.c     91 //****************************************************************************
                   156   ; gpt2.c     92 // @Prototypes Of Local Functions
                   157   ; gpt2.c     93 //****************************************************************************
                   158   ; gpt2.c     94 
                   159   ; gpt2.c     95 // USER CODE BEGIN (GPT2_General,9)
                   160   ; gpt2.c     96 
                   161   ; gpt2.c     97 // USER CODE END
                   162   ; gpt2.c     98 
                   163   ; gpt2.c     99 
                   164   ; gpt2.c    100 //****************************************************************************
                   165   ; gpt2.c    101 // @Function      void GPT2_vInit(void) 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   4
gpt2

 LOC CODE        LINE   SOURCELINE

                   166   ; gpt2.c    102 //
                   167   ; gpt2.c    103 //----------------------------------------------------------------------------
                   168   ; gpt2.c    104 // @Description   This is the initialization function of the GPT2 function 
                   169   ; gpt2.c    105 //                library. It is assumed that the SFRs used by this library 
                   170   ; gpt2.c    106 //                are in reset state. 
                   171   ; gpt2.c    107 //
                   172   ; gpt2.c    108 //----------------------------------------------------------------------------
                   173   ; gpt2.c    109 // @Returnvalue   None
                   174   ; gpt2.c    110 //
                   175   ; gpt2.c    111 //----------------------------------------------------------------------------
                   176   ; gpt2.c    112 // @Parameters    None
                   177   ; gpt2.c    113 //
                   178   ; gpt2.c    114 //----------------------------------------------------------------------------
                   179   ; gpt2.c    115 // @Date          23.09.2021
                   180   ; gpt2.c    116 //
                   181   ; gpt2.c    117 //****************************************************************************
                   182   ; gpt2.c    118 
                   183   ; gpt2.c    119 // USER CODE BEGIN (Init,1)
                   184   ; gpt2.c    120 
                   185   ; gpt2.c    121 // USER CODE END
                   186   ; gpt2.c    122 
                   187   ; gpt2.c    123 void GPT2_vInit(void)
                   188   ; gpt2.c    124 {
                   189   GPT2_1_PR       SECTION CODE WORD PUBLIC 'CPROGRAM'
                   190           ?LINE   124
                   191           PUBLIC  _GPT2_vInit
               R   192           ?SYMB   'GPT2_vInit',_GPT2_vInit,37,1
                   193           ?SYMB   '',124,8,34
                   194           ?SYMB   'uword',18,13,260
                   195           ?SYMB   '',010000H,7,261
                   196           ?SYMB   '',010001H,7,262
                   197           ?SYMB   '',010002H,7,263
                   198           ?SYMB   '',010003H,7,264
                   199           ?SYMB   '',010004H,7,265
                   200           ?SYMB   '',010005H,7,266
                   201           ?SYMB   '',010006H,7,267
                   202           ?SYMB   '',010007H,7,268
                   203           ?SYMB   '',010000H,7,269
                   204           ?SYMB   '',010001H,7,270
                   205           ?SYMB   '',010002H,7,271
                   206           ?SYMB   '',010003H,7,272
                   207           ?SYMB   '',010004H,7,273
                   208           ?SYMB   '',010005H,7,274
                   209           ?SYMB   '',010006H,7,275
                   210           ?SYMB   '',010007H,7,276
                   211           ?SYMB   'T$1',0,40,277
                   212           ?SYMB   'bit0',0,23,261
                   213           ?SYMB   'bit1',1,23,262
                   214           ?SYMB   'bit2',2,23,263
                   215           ?SYMB   'bit3',3,23,264
                   216           ?SYMB   'bit4',4,23,265
                   217           ?SYMB   'bit5',5,23,266
                   218           ?SYMB   'bit6',6,23,267
                   219           ?SYMB   'bit7',7,23,268
                   220           ?SYMB   'bit8',8,23,269
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   5
gpt2

 LOC CODE        LINE   SOURCELINE

                   221           ?SYMB   'bit9',9,23,270
                   222           ?SYMB   'bit10',10,23,271
                   223           ?SYMB   'bit11',11,23,272
                   224           ?SYMB   'bit12',12,23,273
                   225           ?SYMB   'bit13',13,23,274
                   226           ?SYMB   'bit14',14,23,275
                   227           ?SYMB   'bit15',15,23,276
                   228           ?SYMB   '',16,18,0
                   229           ?SYMB   'T_Reg16',277,13,278
                   230   _GPT2_vInit     PROC    FAR
                   231           ?SYMB   '',00H,95,0
                   232   ; Locals:
                   233   ; 
                   234   ; Statics:
                   235   ; 
                   236   ; CSEs:
                   237   ; 
                   238   ; gpt2.c    125 
                   239   ; gpt2.c    126   // USER CODE BEGIN (Init,2)
                   240   ; gpt2.c    127 
                   241   ; gpt2.c    128   // USER CODE END
                   242   ; gpt2.c    129   ///  -----------------------------------------------------------------------
                   243   ; gpt2.c    130   ///  Configuration of Timer Block Prescaler 1:
                   244   ; gpt2.c    131   ///  -----------------------------------------------------------------------
                   245   ; gpt2.c    132   GPT12E_KSCCFG  =  0x0003;      // Module Enable
                   246           ?LINE   132
0000 E03C          247           MOV     R12,#03h
0002 F6FC1CFE      248           MOV     0FE1Ch,R12
                   249   ; gpt2.c    133 
                   250   ; gpt2.c    134 
                   251   ; gpt2.c    135   _nop();  // one cycle delay 
                   252           ?LINE   135
0006 CC00          253           NOP
                   254   ; gpt2.c    136 
                   255   ; gpt2.c    137   _nop();  // one cycle delay 
                   256           ?LINE   137
0008 CC00          257           NOP
                   258   ; gpt2.c    138 
                   259   ; gpt2.c    139 
                   260   ; gpt2.c    140   ///  -----------------------------------------------------------------------
                   261   ; gpt2.c    141   ///  Configuration of Timer Block Prescaler 2:
                   262   ; gpt2.c    142   ///  -----------------------------------------------------------------------
                   263   ; gpt2.c    143   ///  - prescaler for timer block 2 is 2
                   264   ; gpt2.c    144 
                   265   ; gpt2.c    145 
                   266   ; gpt2.c    146   ///  -----------------------------------------------------------------------
                   267   ; gpt2.c    147   ///  Configuration of the GPT2 Core Timer 5:
                   268   ; gpt2.c    148   ///  -----------------------------------------------------------------------
                   269   ; gpt2.c    149   ///  - timer 5 works in timer mode
                   270   ; gpt2.c    150   ///  - prescaler factor is 2
                   271   ; gpt2.c    151   ///  - up/down control bit is reset
                   272   ; gpt2.c    152   ///  - external up/down control is disabled
                   273   ; gpt2.c    153   ///  - timer 5 run bit is reset
                   274   ; gpt2.c    154   ///  - timer 5 remote control is disabled
                   275   ; gpt2.c    155 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   6
gpt2

 LOC CODE        LINE   SOURCELINE

                   276   ; gpt2.c    156   GPT12E_T5CON   =  0x0000;      // load timer 5 control register
                   277           ?LINE   156
000A E00C          278           MOV     R12,#00h
000C F6FC46FF      279           MOV     0FF46h,R12
                   280   ; gpt2.c    157   GPT12E_T5      =  0xFFFF;      // load timer 5 register
                   281           ?LINE   157
0010 E6FCFFFF      282           MOV     R12,#0FFFFh
0014 F6FC46FE      283           MOV     0FE46h,R12
                   284   ; gpt2.c    158 
                   285   ; gpt2.c    159   ///  -----------------------------------------------------------------------
                   286   ; gpt2.c    160   ///  Configuration of the GPT2 Core Timer 6:
                   287   ; gpt2.c    161   ///  -----------------------------------------------------------------------
                   288   ; gpt2.c    162   ///  - timer 6 works in timer mode
                   289   ; gpt2.c    163   ///  - prescaler factor is 4
                   290   ; gpt2.c    164   ///  - up/down control bit is reset
                   291   ; gpt2.c    165   ///  - external up/down control is disabled
                   292   ; gpt2.c    166   ///  - alternate output function T6OUT (P6.2) is disabled
                   293   ; gpt2.c    167   ///  - alternate output function T6OUT (P7.0) is disabled
                   294   ; gpt2.c    168   ///  - timer 6 output toggle latch (T6OTL) is set to 0
                   295   ; gpt2.c    169   ///  - CAPREL is used as a reload register for the core timer T6
                   296   ; gpt2.c    170   ///  - timer 6 is not cleared on a capture
                   297   ; gpt2.c    171 
                   298   ; gpt2.c    172   GPT12E_T6CON   =  0x8801;      // load timer 6 control register
                   299           ?LINE   172
0018 E6FC0188      300           MOV     R12,#08801h
001C F6FC48FF      301           MOV     0FF48h,R12
                   302   ; gpt2.c    173   GPT12E_T6      =  0xFEBB;      // load timer 6 register
                   303           ?LINE   173
0020 E6FCBBFE      304           MOV     R12,#0FEBBh
0024 F6FC48FE      305           MOV     0FE48h,R12
                   306   ; gpt2.c    174 
                   307   ; gpt2.c    175   ///  -----------------------------------------------------------------------
                   308   ; gpt2.c    176   ///  Configuration of the GPT2 CAPREL:
                   309   ; gpt2.c    177   ///  -----------------------------------------------------------------------
                   310   ; gpt2.c    178   ///  - capture T5 into CAPREL is disabled
                   311   ; gpt2.c    179   ///  - capture trigger from pin CAPIN
                   312   ; gpt2.c    180   ///  - capure is disabled
                   313   ; gpt2.c    181   ///  - timer 5 is not cleared on a capture
                   314   ; gpt2.c    182   ///  - timer 5 is just captured without any correction
                   315   ; gpt2.c    183 
                   316   ; gpt2.c    184   GPT12E_T5CON  |=  0x0000;      // load timer 5 control register
                   317           ?LINE   184
0028 E6FC46FF      318           MOV     R12,#0FF46h
002C A8CC          319           MOV     R12,[R12]
                   320   ; gpt2.c    185   GPT12E_CAPREL  =  0xFEBB;      // load CAPREL register
                   321           ?LINE   185
002E E6FCBBFE      322           MOV     R12,#0FEBBh
0032 F6FC4AFE      323           MOV     0FE4Ah,R12
                   324   ; gpt2.c    186 
                   325   ; gpt2.c    187   ///  -----------------------------------------------------------------------
                   326   ; gpt2.c    188   ///  Configuration of the used GPT2 Port Pins:
                   327   ; gpt2.c    189   ///  -----------------------------------------------------------------------
                   328   ; gpt2.c    190 
                   329   ; gpt2.c    191 
                   330   ; gpt2.c    192   ///  -----------------------------------------------------------------------
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   7
gpt2

 LOC CODE        LINE   SOURCELINE

                   331   ; gpt2.c    193   ///  Configuration of the used GPT2 Interrupts:
                   332   ; gpt2.c    194   ///  -----------------------------------------------------------------------
                   333   ; gpt2.c    195   ///  timer 6 service request node configuration:
                   334   ; gpt2.c    196   ///  - timer 6 interrupt priority level (ILVL) = 11
                   335   ; gpt2.c    197   ///  - timer 6 interrupt group level (GLVL) = 0
                   336   ; gpt2.c    198   ///  - timer 6 group priority extension (GPX) = 0
                   337   ; gpt2.c    199 
                   338   ; gpt2.c    200   GPT12E_T6IC    =  0x006C;     
                   339           ?LINE   200
0036 E6FC6C00      340           MOV     R12,#06Ch
003A F6FC68FF      341           MOV     0FF68h,R12
                   342   ; gpt2.c    201 
                   343   ; gpt2.c    202 
                   344   ; gpt2.c    203 
                   345   ; gpt2.c    204   // USER CODE BEGIN (GPT2_Function,3)
                   346   ; gpt2.c    205 
                   347   ; gpt2.c    206   // USER CODE END
                   348   ; gpt2.c    207 
                   349   ; gpt2.c    208   GPT12E_T6CON_T6R  =  1;        // set timer 6 run bit
                   350           ?LINE   208
003E E6FC48FF      351           MOV     R12,#0FF48h
0042 A8DC          352           MOV     R13,[R12]
0044 0AFD4040      353           BFLDL   R13,#040h,#040h
0048 B8DC          354           MOV     [R12],R13
                   355   ; gpt2.c    209 
                   356   ; gpt2.c    210 } //  End of function GPT2_viCAPREL
                   357           ?LINE   210
004A DB00          358           RETS
                   359   _GPT2_vInit     ENDP
               R   360           ?SYMB   '',$,17,210
                   361   ; gpt2.c    211 
                   362   ; gpt2.c    212 //****************************************************************************
                   363   ; gpt2.c    213 // @Function      void GPT2_viTmr6(void) 
                   364   ; gpt2.c    214 //
                   365   ; gpt2.c    215 //----------------------------------------------------------------------------
                   366   ; gpt2.c    216 // @Description   This is the interrupt service routine for the GPT2 timer 6. 
                   367   ; gpt2.c    217 //                It is called up in the case of over or underflow of the 
                   368   ; gpt2.c    218 //                timer 6 register.
                   369   ; gpt2.c    219 //                
                   370   ; gpt2.c    220 //                Please note that you have to add application specific code 
                   371   ; gpt2.c    221 //                to this function.
                   372   ; gpt2.c    222 //
                   373   ; gpt2.c    223 //----------------------------------------------------------------------------
                   374   ; gpt2.c    224 // @Returnvalue   None
                   375   ; gpt2.c    225 //
                   376   ; gpt2.c    226 //----------------------------------------------------------------------------
                   377   ; gpt2.c    227 // @Parameters    None
                   378   ; gpt2.c    228 //
                   379   ; gpt2.c    229 //----------------------------------------------------------------------------
                   380   ; gpt2.c    230 // @Date          23.09.2021
                   381   ; gpt2.c    231 //
                   382   ; gpt2.c    232 //****************************************************************************
                   383   ; gpt2.c    233 
                   384   ; gpt2.c    234 // USER CODE BEGIN (Tmr6,1)
                   385   ; gpt2.c    235 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   8
gpt2

 LOC CODE        LINE   SOURCELINE

                   386   ; gpt2.c    236 // USER CODE END
                   387   ; gpt2.c    237 
                   388   ; gpt2.c    238 _interrupt(T6INT)  void GPT2_viTmr6(void)
                   389   ; gpt2.c    239 {
               R   390           ?SYMB   'GPT2_viTmr6',_GPT2_viTmr6,37,1
                   391           ?SYMB   '',239,8,16
                   392   _GPT2_viTmr6    PROC TASK GPT2_TASK INTNO GPT2_INUM = 024h
                   393           ?LINE   239
                   394           ?SYMB   '',00H,95,0
004C F6F00000  R   395           MOV     GPT2_RB,R0
0050 C6080000  R   396           SCXT    CP,#GPT2_RB
0054 C6871000      397           SCXT    MDC,#010h
0058 EC00          398           PUSH    DPP0
005A E6000000  R   399           MOV     DPP0,#PAG ?BASE_DPP0
005E CC00          400           NOP
0060 EC02          401           PUSH    DPP2
0062 E6020000  R   402           MOV     DPP2,#PAG ?BASE_DPP2
0066 CC00          403           NOP
0068 EC06          404           PUSH    MDH
006A EC07          405           PUSH    MDL
006C ECEF          406           PUSH    MSW
006E EC2E          407           PUSH    MAL
0070 EC2F          408           PUSH    MAH
0072 ECEE          409           PUSH    MCW
0074 C6ED0000      410           SCXT    MRW,#00h
0078 EC84          411           PUSH    IDX0
007A EC85          412           PUSH    IDX1
007C D180          413           EXTR    #01h
007E EC00     1    414           PUSH    QX0
0080 D180          415           EXTR    #01h
0082 EC01     1    416           PUSH    QX1
0084 D180          417           EXTR    #01h
0086 EC02     1    418           PUSH    QR0
0088 D180          419           EXTR    #01h
008A EC03     1    420           PUSH    QR1
                   421   ; Locals:
                   422   ; 
                   423   ; Statics:
                   424   ; 
                   425   ; CSEs:
                   426   ; 
                   427   ; gpt2.c    240   // USER CODE BEGIN (Tmr6,2)
                   428   ; gpt2.c    241            index++;
                   429           ?LINE   241
008C F2FC0000  R   430           MOV     R12,_index
0090 08C1          431           ADD     R12,#01h
0092 F6FC0000  R   432           MOV     _index,R12
                   433   ; gpt2.c    242            index = index%ARRAY_SIZE;
                   434           ?LINE   242
0096 F2FC0000  R   435           MOV     R12,_index
009A E6FD5802      436           MOV     R13,#0258h
009E F6FC0EFE      437           MOV     MDL,R12
00A2 5BDD          438           DIVU    R13
00A4 F2FC0CFE      439           MOV     R12,MDH
00A8 F6FC0000  R   440           MOV     _index,R12
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 17:57:12  Page:   9
gpt2

 LOC CODE        LINE   SOURCELINE

                   441   ; gpt2.c    243   // USER CODE END
                   442   ; gpt2.c    244 
                   443   ; gpt2.c    245 } //  End of function GPT2_viTmr6
                   444           ?LINE   245
00AC D180          445           EXTR    #01h
00AE FC03     1    446           POP     QR1
00B0 D180          447           EXTR    #01h
00B2 FC02     1    448           POP     QR0
00B4 D180          449           EXTR    #01h
00B6 FC01     1    450           POP     QX1
00B8 D180          451           EXTR    #01h
00BA FC00     1    452           POP     QX0
00BC FC85          453           POP     IDX1
00BE FC84          454           POP     IDX0
00C0 FCED          455           POP     MRW
00C2 FCEE          456           POP     MCW
00C4 FC2F          457           POP     MAH
00C6 FC2E          458           POP     MAL
00C8 FCEF          459           POP     MSW
00CA FC07          460           POP     MDL
00CC FC06          461           POP     MDH
00CE FC02          462           POP     DPP2
00D0 FC00          463           POP     DPP0
00D2 FC87          464           POP     MDC
00D4 FC08          465           POP     CP
                   466           ?LINE   245
00D6 FB88          467           RETI
                   468   _GPT2_viTmr6    ENDP
               R   469           ?SYMB   '',$,17,245
                   470   ; gpt2.c    246 
                   471   ; gpt2.c    247 
                   472   ; gpt2.c    248 
                   473   ; gpt2.c    249 
                   474   ; gpt2.c    250 // USER CODE BEGIN (GPT2_General,10)
                   475   ; gpt2.c    251 
                   476   ; gpt2.c    252 // USER CODE END
                   477   ; gpt2.c    253 
                   478   GPT2_1_PR       ENDS
                   479   
                   480           EXTERN  _index:WORD
                   481   GPT2_RB REGDEF  R0-R15
                   482           END

total errors: 0, warnings: 0

