TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   1
gpt2

 LOC CODE        LINE   SOURCELINE

                     1   ; TASKING C166/ST10 C compiler v8.7r1 Build 775
                     2   ; options: -e -Id:\programme\tasking\c166 v8.7r1\include -x2 -Bhoeufmknladij -OB
                     3   ;          -OE -zswitch_tabmem_default -zautobitastruct-4 -zautobita-0 -FSC -A1
                     4   ;          -zvolatile_union -O0 -g -newerr -s -i0 -Ms
                     5   $DEBUG
                     6   $NOLOCALS
                     7   $EXTEND2
                     8   $NOMOD166
                     9   $STDNAMES(regsuper10bo.def)
                    10   $EXTMAC
                    11   $CASE
                    12   $NOEXPANDREGBANK
                    13   $MODEL(SMALL)
                    14           NAME    GPT2_C
                    15           ?SYMB   'gpt2.c',32,80,16
                    16           ?SYMB   '',1,82,0
                    17           ?SYMB   '80166',0,84,0
                    18           ?SYMB   '',0,81,0
                    19           ?SYMB   'void',00H,45,1
                    20           ?SYMB   'char',080000H,45,2
                    21           ?SYMB   'unsigned char',080000H,45,3
                    22           ?SYMB   'short',0100000H,45,4
                    23           ?SYMB   'unsigned short',0100000H,45,5
                    24           ?SYMB   'long',0200000H,45,6
                    25           ?SYMB   'unsigned long',0200000H,45,7
                    26           ?SYMB   'float',0200000H,45,10
                    27           ?SYMB   'double',0400000H,45,11
                    28           ?SYMB   'int',0100000H,45,16
                    29           ?SYMB   'unsigned int',0100000H,45,18
                    30           ?SYMB   'bit',010000H,7,256
                    31           ?SYMB   'gpt2.c',0,29,1
                    32           ?SYMB   '',0,86,1
                    33   ; gpt2.c      1 //****************************************************************************
                    34   ; gpt2.c      2 // @Module        General Purpose Timer Unit (GPT2)
                    35   ; gpt2.c      3 // @Filename      GPT2.C
                    36   ; gpt2.c      4 // @Project       DAvE_config.dav
                    37   ; gpt2.c      5 //----------------------------------------------------------------------------
                    38   ; gpt2.c      6 // @Controller    Infineon XE167F-96F66
                    39   ; gpt2.c      7 //
                    40   ; gpt2.c      8 // @Compiler      Tasking Classic
                    41   ; gpt2.c      9 //
                    42   ; gpt2.c     10 // @Codegenerator 2.2
                    43   ; gpt2.c     11 //
                    44   ; gpt2.c     12 // @Description   This file contains functions that use the GPT2 module.
                    45   ; gpt2.c     13 //
                    46   ; gpt2.c     14 //----------------------------------------------------------------------------
                    47   ; gpt2.c     15 // @Date          27.09.2021 18:18:20
                    48   ; gpt2.c     16 //
                    49   ; gpt2.c     17 //****************************************************************************
                    50   ; gpt2.c     18 
                    51   ; gpt2.c     19 // USER CODE BEGIN (GPT2_General,1)
                    52   ; gpt2.c     20 
                    53   ; gpt2.c     21 // USER CODE END
                    54   ; gpt2.c     22 
                    55   ; gpt2.c     23 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   2
gpt2

 LOC CODE        LINE   SOURCELINE

                    56   ; gpt2.c     24 
                    57   ; gpt2.c     25 //****************************************************************************
                    58   ; gpt2.c     26 // @Project Includes
                    59   ; gpt2.c     27 //****************************************************************************
                    60   ; gpt2.c     28 
                    61   ; gpt2.c     29 #include "MAIN.H"
                    62           ?SYMB   'MAIN.H',0,29,2
                    63           ?SYMB   '',0,86,2
                    64           ?SYMB   'XE16xREGS.H',0,29,3
                    65           ?SYMB   '',0,86,3
                    66           ?SYMB   '',0,86,2
                    67           ?SYMB   'SCS.H',0,29,3
                    68           ?SYMB   '',0,86,3
                    69           ?SYMB   'T$2',0,14,257
                    70           ?SYMB   'SCS_EXTCLK_F_SYS',0,33,257
                    71           ?SYMB   'SCS_EXTCLK_F_OUT',1,33,257
                    72           ?SYMB   'SCS_EXTCLK_F_PLL',2,33,257
                    73           ?SYMB   'SCS_EXTCLK_F_OSC',3,33,257
                    74           ?SYMB   'SCS_EXTCLK_F_WU',4,33,257
                    75           ?SYMB   'SCS_EXTCLK_F_TCK',5,33,257
                    76           ?SYMB   'SCS_EXTCLK_F_OSC_FL',6,33,257
                    77           ?SYMB   'SCS_EXTCLK_F_RTC',8,33,257
                    78           ?SYMB   '',16,16,0
                    79           ?SYMB   'SCS_EXTCLK_Type',257,13,258
                    80           ?SYMB   '',0,86,2
                    81           ?SYMB   'IO.H',0,29,3
                    82           ?SYMB   '',0,86,3
                    83           ?SYMB   '',0,86,2
                    84           ?SYMB   'GPT1.H',0,29,3
                    85           ?SYMB   '',0,86,3
                    86           ?SYMB   '',0,86,2
                    87           ?SYMB   'GPT2.H',0,29,3
                    88           ?SYMB   '',0,86,3
                    89           ?SYMB   '',0,86,2
                    90           ?SYMB   'CC2.H',0,29,3
                    91           ?SYMB   '',0,86,3
                    92           ?SYMB   '',0,86,2
                    93           ?SYMB   'CCU62.H',0,29,3
                    94           ?SYMB   '',0,86,3
                    95           ?SYMB   '',0,86,2
                    96           ?SYMB   'CCU63.H',0,29,3
                    97           ?SYMB   '',0,86,3
                    98           ?SYMB   '',0,86,2
                    99           ?SYMB   'ADC0.H',0,29,3
                   100           ?SYMB   '',0,86,3
                   101           ?SYMB   'ubyte',3,13,259
                   102           ?SYMB   '',0,86,2
                   103           ?SYMB   '',0,86,1
                   104   ; gpt2.c     30 
                   105   ; gpt2.c     31 // USER CODE BEGIN (GPT2_General,2)
                   106   ; gpt2.c     32 
                   107   ; gpt2.c     33 // USER CODE END
                   108   ; gpt2.c     34 
                   109   ; gpt2.c     35 
                   110   ; gpt2.c     36 //****************************************************************************
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   3
gpt2

 LOC CODE        LINE   SOURCELINE

                   111   ; gpt2.c     37 // @Macros
                   112   ; gpt2.c     38 //****************************************************************************
                   113   ; gpt2.c     39 
                   114   ; gpt2.c     40 // USER CODE BEGIN (GPT2_General,3)
                   115   ; gpt2.c     41 
                   116   ; gpt2.c     42 // USER CODE END
                   117   ; gpt2.c     43 
                   118   ; gpt2.c     44 
                   119   ; gpt2.c     45 //****************************************************************************
                   120   ; gpt2.c     46 // @Defines
                   121   ; gpt2.c     47 //****************************************************************************
                   122   ; gpt2.c     48 
                   123   ; gpt2.c     49 // USER CODE BEGIN (GPT2_General,4)
                   124   ; gpt2.c     50 
                   125   ; gpt2.c     51 // USER CODE END
                   126   ; gpt2.c     52 
                   127   ; gpt2.c     53 
                   128   ; gpt2.c     54 //****************************************************************************
                   129   ; gpt2.c     55 // @Typedefs
                   130   ; gpt2.c     56 //****************************************************************************
                   131   ; gpt2.c     57 
                   132   ; gpt2.c     58 // USER CODE BEGIN (GPT2_General,5)
                   133   ; gpt2.c     59 
                   134   ; gpt2.c     60 // USER CODE END
                   135   ; gpt2.c     61 
                   136   ; gpt2.c     62 
                   137   ; gpt2.c     63 //****************************************************************************
                   138   ; gpt2.c     64 // @Imported Global Variables
                   139   ; gpt2.c     65 //****************************************************************************
                   140   ; gpt2.c     66 
                   141   ; gpt2.c     67 // USER CODE BEGIN (GPT2_General,6)
                   142   ; gpt2.c     68         extern const unsigned int ARRAY_SIZE;
                   143   ; gpt2.c     69         extern  unsigned int rampIndex;
                   144   ; gpt2.c     70         
                   145   ; gpt2.c     71 // USER CODE END
                   146   ; gpt2.c     72 
                   147   ; gpt2.c     73 
                   148   ; gpt2.c     74 //****************************************************************************
                   149   ; gpt2.c     75 // @Global Variables
                   150   ; gpt2.c     76 //****************************************************************************
                   151   ; gpt2.c     77 
                   152   ; gpt2.c     78 // USER CODE BEGIN (GPT2_General,7)
                   153   ; gpt2.c     79 
                   154   ; gpt2.c     80 // USER CODE END
                   155   ; gpt2.c     81 
                   156   ; gpt2.c     82 
                   157   ; gpt2.c     83 //****************************************************************************
                   158   ; gpt2.c     84 // @External Prototypes
                   159   ; gpt2.c     85 //****************************************************************************
                   160   ; gpt2.c     86 
                   161   ; gpt2.c     87 // USER CODE BEGIN (GPT2_General,8)
                   162   ; gpt2.c     88 
                   163   ; gpt2.c     89 // USER CODE END
                   164   ; gpt2.c     90 
                   165   ; gpt2.c     91 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   4
gpt2

 LOC CODE        LINE   SOURCELINE

                   166   ; gpt2.c     92 
                   167   ; gpt2.c     93 //****************************************************************************
                   168   ; gpt2.c     94 // @Prototypes Of Local Functions
                   169   ; gpt2.c     95 //****************************************************************************
                   170   ; gpt2.c     96 
                   171   ; gpt2.c     97 // USER CODE BEGIN (GPT2_General,9)
                   172   ; gpt2.c     98 
                   173   ; gpt2.c     99 // USER CODE END
                   174   ; gpt2.c    100 
                   175   ; gpt2.c    101 
                   176   ; gpt2.c    102 //****************************************************************************
                   177   ; gpt2.c    103 // @Function      void GPT2_vInit(void) 
                   178   ; gpt2.c    104 //
                   179   ; gpt2.c    105 //----------------------------------------------------------------------------
                   180   ; gpt2.c    106 // @Description   This is the initialization function of the GPT2 function 
                   181   ; gpt2.c    107 //                library. It is assumed that the SFRs used by this library 
                   182   ; gpt2.c    108 //                are in reset state. 
                   183   ; gpt2.c    109 //
                   184   ; gpt2.c    110 //----------------------------------------------------------------------------
                   185   ; gpt2.c    111 // @Returnvalue   None
                   186   ; gpt2.c    112 //
                   187   ; gpt2.c    113 //----------------------------------------------------------------------------
                   188   ; gpt2.c    114 // @Parameters    None
                   189   ; gpt2.c    115 //
                   190   ; gpt2.c    116 //----------------------------------------------------------------------------
                   191   ; gpt2.c    117 // @Date          27.09.2021
                   192   ; gpt2.c    118 //
                   193   ; gpt2.c    119 //****************************************************************************
                   194   ; gpt2.c    120 
                   195   ; gpt2.c    121 // USER CODE BEGIN (Init,1)
                   196   ; gpt2.c    122 
                   197   ; gpt2.c    123 // USER CODE END
                   198   ; gpt2.c    124 
                   199   ; gpt2.c    125 void GPT2_vInit(void)
                   200   ; gpt2.c    126 {
                   201   GPT2_1_PR       SECTION CODE WORD PUBLIC 'CPROGRAM'
                   202           ?LINE   126
                   203           PUBLIC  _GPT2_vInit
               R   204           ?SYMB   'GPT2_vInit',_GPT2_vInit,37,1
                   205           ?SYMB   '',126,8,34
                   206           ?SYMB   'uword',18,13,261
                   207   _GPT2_vInit     PROC    FAR
                   208           ?SYMB   '',00H,95,0
                   209   ; Locals:
                   210   ; 
                   211   ; Statics:
                   212   ; 
                   213   ; CSEs:
                   214   ; 
                   215   ; gpt2.c    127 
                   216   ; gpt2.c    128   // USER CODE BEGIN (Init,2)
                   217   ; gpt2.c    129 
                   218   ; gpt2.c    130   // USER CODE END
                   219   ; gpt2.c    131   ///  -----------------------------------------------------------------------
                   220   ; gpt2.c    132   ///  Configuration of Timer Block Prescaler 1:
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   5
gpt2

 LOC CODE        LINE   SOURCELINE

                   221   ; gpt2.c    133   ///  -----------------------------------------------------------------------
                   222   ; gpt2.c    134   GPT12E_KSCCFG  =  0x0003;      // Module Enable
                   223           ?LINE   134
0000 E03C          224           MOV     R12,#03h
0002 F6FC1CFE      225           MOV     0FE1Ch,R12
                   226   ; gpt2.c    135 
                   227   ; gpt2.c    136 
                   228   ; gpt2.c    137   _nop();  // one cycle delay 
                   229           ?LINE   137
0006 CC00          230           NOP
                   231   ; gpt2.c    138 
                   232   ; gpt2.c    139   _nop();  // one cycle delay 
                   233           ?LINE   139
0008 CC00          234           NOP
                   235   ; gpt2.c    140 
                   236   ; gpt2.c    141 
                   237   ; gpt2.c    142   ///  -----------------------------------------------------------------------
                   238   ; gpt2.c    143   ///  Configuration of Timer Block Prescaler 2:
                   239   ; gpt2.c    144   ///  -----------------------------------------------------------------------
                   240   ; gpt2.c    145   ///  - prescaler for timer block 2 is 2
                   241   ; gpt2.c    146 
                   242   ; gpt2.c    147 
                   243   ; gpt2.c    148   ///  -----------------------------------------------------------------------
                   244   ; gpt2.c    149   ///  Configuration of the GPT2 Core Timer 5:
                   245   ; gpt2.c    150   ///  -----------------------------------------------------------------------
                   246   ; gpt2.c    151   ///  - timer 5 works in timer mode
                   247   ; gpt2.c    152   ///  - prescaler factor is 2
                   248   ; gpt2.c    153   ///  - up/down control bit is reset
                   249   ; gpt2.c    154   ///  - external up/down control is disabled
                   250   ; gpt2.c    155   ///  - timer 5 run bit is reset
                   251   ; gpt2.c    156   ///  - timer 5 remote control is disabled
                   252   ; gpt2.c    157 
                   253   ; gpt2.c    158   GPT12E_T5CON   =  0x0000;      // load timer 5 control register
                   254           ?LINE   158
000A E00C          255           MOV     R12,#00h
000C F6FC46FF      256           MOV     0FF46h,R12
                   257   ; gpt2.c    159   GPT12E_T5      =  0xFFFF;      // load timer 5 register
                   258           ?LINE   159
0010 E6FCFFFF      259           MOV     R12,#0FFFFh
0014 F6FC46FE      260           MOV     0FE46h,R12
                   261   ; gpt2.c    160 
                   262   ; gpt2.c    161   ///  -----------------------------------------------------------------------
                   263   ; gpt2.c    162   ///  Configuration of the GPT2 Core Timer 6:
                   264   ; gpt2.c    163   ///  -----------------------------------------------------------------------
                   265   ; gpt2.c    164   ///  - timer 6 works in timer mode
                   266   ; gpt2.c    165   ///  - prescaler factor is 256
                   267   ; gpt2.c    166   ///  - up/down control bit is reset
                   268   ; gpt2.c    167   ///  - external up/down control is disabled
                   269   ; gpt2.c    168   ///  - alternate output function T6OUT (P6.2) is disabled
                   270   ; gpt2.c    169   ///  - alternate output function T6OUT (P7.0) is disabled
                   271   ; gpt2.c    170   ///  - timer 6 output toggle latch (T6OTL) is set to 0
                   272   ; gpt2.c    171   ///  - timer 6 run bit is reset
                   273   ; gpt2.c    172   ///  - timer 6 is not cleared on a capture
                   274   ; gpt2.c    173 
                   275   ; gpt2.c    174   GPT12E_T6CON   =  0x0807;      // load timer 6 control register
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   6
gpt2

 LOC CODE        LINE   SOURCELINE

                   276           ?LINE   174
0018 E6FC0708      277           MOV     R12,#0807h
001C F6FC48FF      278           MOV     0FF48h,R12
                   279   ; gpt2.c    175   GPT12E_T6      =  0xF419;      // load timer 6 register
                   280           ?LINE   175
0020 E6FC19F4      281           MOV     R12,#0F419h
0024 F6FC48FE      282           MOV     0FE48h,R12
                   283   ; gpt2.c    176 
                   284   ; gpt2.c    177   ///  -----------------------------------------------------------------------
                   285   ; gpt2.c    178   ///  Configuration of the GPT2 CAPREL:
                   286   ; gpt2.c    179   ///  -----------------------------------------------------------------------
                   287   ; gpt2.c    180   ///  - capture T5 into CAPREL is disabled
                   288   ; gpt2.c    181   ///  - capture trigger from pin CAPIN
                   289   ; gpt2.c    182   ///  - capure is disabled
                   290   ; gpt2.c    183   ///  - timer 5 is not cleared on a capture
                   291   ; gpt2.c    184   ///  - timer 5 is just captured without any correction
                   292   ; gpt2.c    185 
                   293   ; gpt2.c    186   GPT12E_T5CON  |=  0x0000;      // load timer 5 control register
                   294           ?LINE   186
0028 E6FC46FF      295           MOV     R12,#0FF46h
002C A8CC          296           MOV     R12,[R12]
                   297   ; gpt2.c    187   GPT12E_CAPREL  =  0xF419;      // load CAPREL register
                   298           ?LINE   187
002E E6FC19F4      299           MOV     R12,#0F419h
0032 F6FC4AFE      300           MOV     0FE4Ah,R12
                   301   ; gpt2.c    188 
                   302   ; gpt2.c    189   ///  -----------------------------------------------------------------------
                   303   ; gpt2.c    190   ///  Configuration of the used GPT2 Port Pins:
                   304   ; gpt2.c    191   ///  -----------------------------------------------------------------------
                   305   ; gpt2.c    192 
                   306   ; gpt2.c    193 
                   307   ; gpt2.c    194   ///  -----------------------------------------------------------------------
                   308   ; gpt2.c    195   ///  Configuration of the used GPT2 Interrupts:
                   309   ; gpt2.c    196   ///  -----------------------------------------------------------------------
                   310   ; gpt2.c    197   ///  timer 6 service request node configuration:
                   311   ; gpt2.c    198   ///  - timer 6 interrupt priority level (ILVL) = 10
                   312   ; gpt2.c    199   ///  - timer 6 interrupt group level (GLVL) = 0
                   313   ; gpt2.c    200   ///  - timer 6 group priority extension (GPX) = 0
                   314   ; gpt2.c    201 
                   315   ; gpt2.c    202   GPT12E_T6IC    =  0x0068;     
                   316           ?LINE   202
0036 E6FC6800      317           MOV     R12,#068h
003A F6FC68FF      318           MOV     0FF68h,R12
                   319   ; gpt2.c    203 
                   320   ; gpt2.c    204 
                   321   ; gpt2.c    205 
                   322   ; gpt2.c    206   // USER CODE BEGIN (GPT2_Function,3)
                   323   ; gpt2.c    207 
                   324   ; gpt2.c    208   // USER CODE END
                   325   ; gpt2.c    209 
                   326   ; gpt2.c    210 } //  End of function GPT2_viCAPREL
                   327           ?LINE   210
003E DB00          328           RETS
                   329   _GPT2_vInit     ENDP
               R   330           ?SYMB   '',$,17,210
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   7
gpt2

 LOC CODE        LINE   SOURCELINE

                   331   ; gpt2.c    211 
                   332   ; gpt2.c    212 //****************************************************************************
                   333   ; gpt2.c    213 // @Function      void GPT2_viTmr6(void) 
                   334   ; gpt2.c    214 //
                   335   ; gpt2.c    215 //----------------------------------------------------------------------------
                   336   ; gpt2.c    216 // @Description   This is the interrupt service routine for the GPT2 timer 6. 
                   337   ; gpt2.c    217 //                It is called up in the case of over or underflow of the 
                   338   ; gpt2.c    218 //                timer 6 register.
                   339   ; gpt2.c    219 //                
                   340   ; gpt2.c    220 //                Please note that you have to add application specific code 
                   341   ; gpt2.c    221 //                to this function.
                   342   ; gpt2.c    222 //
                   343   ; gpt2.c    223 //----------------------------------------------------------------------------
                   344   ; gpt2.c    224 // @Returnvalue   None
                   345   ; gpt2.c    225 //
                   346   ; gpt2.c    226 //----------------------------------------------------------------------------
                   347   ; gpt2.c    227 // @Parameters    None
                   348   ; gpt2.c    228 //
                   349   ; gpt2.c    229 //----------------------------------------------------------------------------
                   350   ; gpt2.c    230 // @Date          27.09.2021
                   351   ; gpt2.c    231 //
                   352   ; gpt2.c    232 //****************************************************************************
                   353   ; gpt2.c    233 
                   354   ; gpt2.c    234 // USER CODE BEGIN (Tmr6,1)
                   355   ; gpt2.c    235 
                   356   ; gpt2.c    236 // USER CODE END
                   357   ; gpt2.c    237 
                   358   ; gpt2.c    238 _interrupt(T6INT)  void GPT2_viTmr6(void)
                   359   ; gpt2.c    239 {
               R   360           ?SYMB   'GPT2_viTmr6',_GPT2_viTmr6,37,1
                   361           ?SYMB   '',239,8,16
                   362   _GPT2_viTmr6    PROC TASK GPT2_TASK INTNO GPT2_INUM = 024h
                   363           ?LINE   239
                   364           ?SYMB   '',00H,95,0
0040 F6F00000  R   365           MOV     GPT2_RB,R0
0044 C6080000  R   366           SCXT    CP,#GPT2_RB
0048 C6871000      367           SCXT    MDC,#010h
004C EC00          368           PUSH    DPP0
004E E6000000  R   369           MOV     DPP0,#PAG ?BASE_DPP0
0052 CC00          370           NOP
0054 EC02          371           PUSH    DPP2
0056 E6020000  R   372           MOV     DPP2,#PAG ?BASE_DPP2
005A CC00          373           NOP
005C EC06          374           PUSH    MDH
005E EC07          375           PUSH    MDL
0060 ECEF          376           PUSH    MSW
0062 EC2E          377           PUSH    MAL
0064 EC2F          378           PUSH    MAH
0066 ECEE          379           PUSH    MCW
0068 C6ED0000      380           SCXT    MRW,#00h
006C EC84          381           PUSH    IDX0
006E EC85          382           PUSH    IDX1
0070 D180          383           EXTR    #01h
0072 EC00     1    384           PUSH    QX0
0074 D180          385           EXTR    #01h
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   8
gpt2

 LOC CODE        LINE   SOURCELINE

0076 EC01     1    386           PUSH    QX1
0078 D180          387           EXTR    #01h
007A EC02     1    388           PUSH    QR0
007C D180          389           EXTR    #01h
007E EC03     1    390           PUSH    QR1
                   391   ; Locals:
                   392   ; 
                   393   ; Statics:
                   394   ; 
                   395   ; CSEs:
                   396   ; 
                   397   ; gpt2.c    240   // USER CODE BEGIN (Tmr6,2)
                   398   ; gpt2.c    241          rampIndex++;   
                   399           ?LINE   241
0080 F2FC0000  R   400           MOV     R12,_rampIndex
0084 08C1          401           ADD     R12,#01h
0086 F6FC0000  R   402           MOV     _rampIndex,R12
                   403   ; gpt2.c    242   // USER CODE END
                   404   ; gpt2.c    243 
                   405   ; gpt2.c    244 } //  End of function GPT2_viTmr6
                   406           ?LINE   244
008A D180          407           EXTR    #01h
008C FC03     1    408           POP     QR1
008E D180          409           EXTR    #01h
0090 FC02     1    410           POP     QR0
0092 D180          411           EXTR    #01h
0094 FC01     1    412           POP     QX1
0096 D180          413           EXTR    #01h
0098 FC00     1    414           POP     QX0
009A FC85          415           POP     IDX1
009C FC84          416           POP     IDX0
009E FCED          417           POP     MRW
00A0 FCEE          418           POP     MCW
00A2 FC2F          419           POP     MAH
00A4 FC2E          420           POP     MAL
00A6 FCEF          421           POP     MSW
00A8 FC07          422           POP     MDL
00AA FC06          423           POP     MDH
00AC FC02          424           POP     DPP2
00AE FC00          425           POP     DPP0
00B0 FC87          426           POP     MDC
00B2 FC08          427           POP     CP
                   428           ?LINE   244
00B4 FB88          429           RETI
                   430   _GPT2_viTmr6    ENDP
               R   431           ?SYMB   '',$,17,244
                   432   ; gpt2.c    245 
                   433   ; gpt2.c    246 
                   434   ; gpt2.c    247 
                   435   ; gpt2.c    248 
                   436   ; gpt2.c    249 // USER CODE BEGIN (GPT2_General,10)
                   437   ; gpt2.c    250 
                   438   ; gpt2.c    251 // USER CODE END
                   439   ; gpt2.c    252 
                   440   GPT2_1_PR       ENDS
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 27 2021  Time: 18:18:33  Page:   9
gpt2

 LOC CODE        LINE   SOURCELINE

                   441   
                   442           EXTERN  _rampIndex:WORD
                   443   GPT2_RB REGDEF  R0-R15
                   444           END

total errors: 0, warnings: 0

