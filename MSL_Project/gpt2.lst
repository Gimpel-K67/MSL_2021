TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   1
gpt2

 LOC CODE        LINE   SOURCELINE

                     1   ; TASKING C166/ST10 C compiler v8.7r1 Build 775
                     2   ; options: -e -Id:\programme\tasking\c166 v8.7r1\include -x2 -Bhoeufmknladij -OB
                     3   ;          -OE -zswitch_tabmem_default -zautobitastruct-4 -zautobita-0 -FSC -A1
                     4   ;          -zvolatile_union -O0 -g -newerr -s -i0 -Ms
                     5   $DEBUG
                     6   $NOLOCALS
                     7   $EXTEND2
                     8   $NOMOD166
                     9   $STDNAMES(regsuper10bo.def)
                    10   $EXTMAC
                    11   $CASE
                    12   $NOEXPANDREGBANK
                    13   $MODEL(SMALL)
                    14           NAME    GPT2_C
                    15           ?SYMB   'gpt2.c',32,80,16
                    16           ?SYMB   '',1,82,0
                    17           ?SYMB   '80166',0,84,0
                    18           ?SYMB   '',0,81,0
                    19           ?SYMB   'void',00H,45,1
                    20           ?SYMB   'char',080000H,45,2
                    21           ?SYMB   'unsigned char',080000H,45,3
                    22           ?SYMB   'short',0100000H,45,4
                    23           ?SYMB   'unsigned short',0100000H,45,5
                    24           ?SYMB   'long',0200000H,45,6
                    25           ?SYMB   'unsigned long',0200000H,45,7
                    26           ?SYMB   'float',0200000H,45,10
                    27           ?SYMB   'double',0400000H,45,11
                    28           ?SYMB   'int',0100000H,45,16
                    29           ?SYMB   'unsigned int',0100000H,45,18
                    30           ?SYMB   'bit',010000H,7,256
                    31           ?SYMB   'gpt2.c',0,29,1
                    32           ?SYMB   '',0,86,1
                    33   ; gpt2.c      1 //****************************************************************************
                    34   ; gpt2.c      2 // @Module        General Purpose Timer Unit (GPT2)
                    35   ; gpt2.c      3 // @Filename      GPT2.C
                    36   ; gpt2.c      4 // @Project       DAvE_config.dav
                    37   ; gpt2.c      5 //----------------------------------------------------------------------------
                    38   ; gpt2.c      6 // @Controller    Infineon XE167F-96F66
                    39   ; gpt2.c      7 //
                    40   ; gpt2.c      8 // @Compiler      Tasking Classic
                    41   ; gpt2.c      9 //
                    42   ; gpt2.c     10 // @Codegenerator 2.2
                    43   ; gpt2.c     11 //
                    44   ; gpt2.c     12 // @Description   This file contains functions that use the GPT2 module.
                    45   ; gpt2.c     13 //
                    46   ; gpt2.c     14 //----------------------------------------------------------------------------
                    47   ; gpt2.c     15 // @Date          29.09.2021 09:41:09
                    48   ; gpt2.c     16 //
                    49   ; gpt2.c     17 //****************************************************************************
                    50   ; gpt2.c     18 
                    51   ; gpt2.c     19 // USER CODE BEGIN (GPT2_General,1)
                    52   ; gpt2.c     20 
                    53   ; gpt2.c     21 // USER CODE END
                    54   ; gpt2.c     22 
                    55   ; gpt2.c     23 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   2
gpt2

 LOC CODE        LINE   SOURCELINE

                    56   ; gpt2.c     24 
                    57   ; gpt2.c     25 //****************************************************************************
                    58   ; gpt2.c     26 // @Project Includes
                    59   ; gpt2.c     27 //****************************************************************************
                    60   ; gpt2.c     28 
                    61   ; gpt2.c     29 #include "MAIN.H"
                    62           ?SYMB   'MAIN.H',0,29,2
                    63           ?SYMB   '',0,86,2
                    64           ?SYMB   'XE16xREGS.H',0,29,3
                    65           ?SYMB   '',0,86,3
                    66           ?SYMB   '',0,86,2
                    67           ?SYMB   'SCS.H',0,29,3
                    68           ?SYMB   '',0,86,3
                    69           ?SYMB   'T$2',0,14,257
                    70           ?SYMB   'SCS_EXTCLK_F_SYS',0,33,257
                    71           ?SYMB   'SCS_EXTCLK_F_OUT',1,33,257
                    72           ?SYMB   'SCS_EXTCLK_F_PLL',2,33,257
                    73           ?SYMB   'SCS_EXTCLK_F_OSC',3,33,257
                    74           ?SYMB   'SCS_EXTCLK_F_WU',4,33,257
                    75           ?SYMB   'SCS_EXTCLK_F_TCK',5,33,257
                    76           ?SYMB   'SCS_EXTCLK_F_OSC_FL',6,33,257
                    77           ?SYMB   'SCS_EXTCLK_F_RTC',8,33,257
                    78           ?SYMB   '',16,16,0
                    79           ?SYMB   'SCS_EXTCLK_Type',257,13,258
                    80           ?SYMB   '',0,86,2
                    81           ?SYMB   'IO.H',0,29,3
                    82           ?SYMB   '',0,86,3
                    83           ?SYMB   '',0,86,2
                    84           ?SYMB   'GPT1.H',0,29,3
                    85           ?SYMB   '',0,86,3
                    86           ?SYMB   '',0,86,2
                    87           ?SYMB   'GPT2.H',0,29,3
                    88           ?SYMB   '',0,86,3
                    89           ?SYMB   '',0,86,2
                    90           ?SYMB   'CCU62.H',0,29,3
                    91           ?SYMB   '',0,86,3
                    92           ?SYMB   '',0,86,2
                    93           ?SYMB   'CCU63.H',0,29,3
                    94           ?SYMB   '',0,86,3
                    95           ?SYMB   '',0,86,2
                    96           ?SYMB   'ADC0.H',0,29,3
                    97           ?SYMB   '',0,86,3
                    98           ?SYMB   'ubyte',3,13,259
                    99           ?SYMB   '',0,86,2
                   100           ?SYMB   '',0,86,1
                   101   ; gpt2.c     30 
                   102   ; gpt2.c     31 // USER CODE BEGIN (GPT2_General,2)
                   103   ; gpt2.c     32 
                   104   ; gpt2.c     33 // USER CODE END
                   105   ; gpt2.c     34 
                   106   ; gpt2.c     35 
                   107   ; gpt2.c     36 //****************************************************************************
                   108   ; gpt2.c     37 // @Macros
                   109   ; gpt2.c     38 //****************************************************************************
                   110   ; gpt2.c     39 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   3
gpt2

 LOC CODE        LINE   SOURCELINE

                   111   ; gpt2.c     40 // USER CODE BEGIN (GPT2_General,3)
                   112   ; gpt2.c     41 
                   113   ; gpt2.c     42 // USER CODE END
                   114   ; gpt2.c     43 
                   115   ; gpt2.c     44 
                   116   ; gpt2.c     45 //****************************************************************************
                   117   ; gpt2.c     46 // @Defines
                   118   ; gpt2.c     47 //****************************************************************************
                   119   ; gpt2.c     48 
                   120   ; gpt2.c     49 // USER CODE BEGIN (GPT2_General,4)
                   121   ; gpt2.c     50 
                   122   ; gpt2.c     51 // USER CODE END
                   123   ; gpt2.c     52 
                   124   ; gpt2.c     53 
                   125   ; gpt2.c     54 //****************************************************************************
                   126   ; gpt2.c     55 // @Typedefs
                   127   ; gpt2.c     56 //****************************************************************************
                   128   ; gpt2.c     57 
                   129   ; gpt2.c     58 // USER CODE BEGIN (GPT2_General,5)
                   130   ; gpt2.c     59 
                   131   ; gpt2.c     60 // USER CODE END
                   132   ; gpt2.c     61 
                   133   ; gpt2.c     62 
                   134   ; gpt2.c     63 //****************************************************************************
                   135   ; gpt2.c     64 // @Imported Global Variables
                   136   ; gpt2.c     65 //****************************************************************************
                   137   ; gpt2.c     66 
                   138   ; gpt2.c     67 // USER CODE BEGIN (GPT2_General,6)
                   139   ; gpt2.c     68         extern const unsigned int ARRAY_SIZE;
                   140   ; gpt2.c     69         extern  unsigned int rampIndex;
                   141   ; gpt2.c     70         extern volatile float velocity;
                   142   ; gpt2.c     71         extern volatile float rpm;
                   143   ; gpt2.c     72         volatile unsigned int inc;
                   144   ; gpt2.c     73 // USER CODE END
                   145   ; gpt2.c     74 
                   146   ; gpt2.c     75 
                   147   ; gpt2.c     76 //****************************************************************************
                   148   ; gpt2.c     77 // @Global Variables
                   149   ; gpt2.c     78 //****************************************************************************
                   150   ; gpt2.c     79 
                   151   ; gpt2.c     80 // USER CODE BEGIN (GPT2_General,7)
                   152   ; gpt2.c     81 
                   153   ; gpt2.c     82 // USER CODE END
                   154   ; gpt2.c     83 
                   155   ; gpt2.c     84 
                   156   ; gpt2.c     85 //****************************************************************************
                   157   ; gpt2.c     86 // @External Prototypes
                   158   ; gpt2.c     87 //****************************************************************************
                   159   ; gpt2.c     88 
                   160   ; gpt2.c     89 // USER CODE BEGIN (GPT2_General,8)
                   161   ; gpt2.c     90 
                   162   ; gpt2.c     91 // USER CODE END
                   163   ; gpt2.c     92 
                   164   ; gpt2.c     93 
                   165   ; gpt2.c     94 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   4
gpt2

 LOC CODE        LINE   SOURCELINE

                   166   ; gpt2.c     95 //****************************************************************************
                   167   ; gpt2.c     96 // @Prototypes Of Local Functions
                   168   ; gpt2.c     97 //****************************************************************************
                   169   ; gpt2.c     98 
                   170   ; gpt2.c     99 // USER CODE BEGIN (GPT2_General,9)
                   171   ; gpt2.c    100 
                   172   ; gpt2.c    101 // USER CODE END
                   173   ; gpt2.c    102 
                   174   ; gpt2.c    103 
                   175   ; gpt2.c    104 //****************************************************************************
                   176   ; gpt2.c    105 // @Function      void GPT2_vInit(void) 
                   177   ; gpt2.c    106 //
                   178   ; gpt2.c    107 //----------------------------------------------------------------------------
                   179   ; gpt2.c    108 // @Description   This is the initialization function of the GPT2 function 
                   180   ; gpt2.c    109 //                library. It is assumed that the SFRs used by this library 
                   181   ; gpt2.c    110 //                are in reset state. 
                   182   ; gpt2.c    111 //
                   183   ; gpt2.c    112 //----------------------------------------------------------------------------
                   184   ; gpt2.c    113 // @Returnvalue   None
                   185   ; gpt2.c    114 //
                   186   ; gpt2.c    115 //----------------------------------------------------------------------------
                   187   ; gpt2.c    116 // @Parameters    None
                   188   ; gpt2.c    117 //
                   189   ; gpt2.c    118 //----------------------------------------------------------------------------
                   190   ; gpt2.c    119 // @Date          29.09.2021
                   191   ; gpt2.c    120 //
                   192   ; gpt2.c    121 //****************************************************************************
                   193   ; gpt2.c    122 
                   194   ; gpt2.c    123 // USER CODE BEGIN (Init,1)
                   195   ; gpt2.c    124 
                   196   ; gpt2.c    125 // USER CODE END
                   197   ; gpt2.c    126 
                   198   ; gpt2.c    127 void GPT2_vInit(void)
                   199   ; gpt2.c    128 {
                   200   GPT2_1_PR       SECTION CODE WORD PUBLIC 'CPROGRAM'
                   201           ?LINE   128
                   202           PUBLIC  _GPT2_vInit
               R   203           ?SYMB   'GPT2_vInit',_GPT2_vInit,37,1
                   204           ?SYMB   '',128,8,34
                   205           ?SYMB   'uword',18,13,261
                   206   _GPT2_vInit     PROC    FAR
                   207           ?SYMB   '',00H,95,0
                   208   ; Locals:
                   209   ; 
                   210   ; Statics:
                   211   ; 
                   212   ; CSEs:
                   213   ; 
                   214   ; gpt2.c    129 
                   215   ; gpt2.c    130   // USER CODE BEGIN (Init,2)
                   216   ; gpt2.c    131 
                   217   ; gpt2.c    132   // USER CODE END
                   218   ; gpt2.c    133   ///  -----------------------------------------------------------------------
                   219   ; gpt2.c    134   ///  Configuration of Timer Block Prescaler 1:
                   220   ; gpt2.c    135   ///  -----------------------------------------------------------------------
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   5
gpt2

 LOC CODE        LINE   SOURCELINE

                   221   ; gpt2.c    136   GPT12E_KSCCFG  =  0x0003;      // Module Enable
                   222           ?LINE   136
0000 E03C          223           MOV     R12,#03h
0002 F6FC1CFE      224           MOV     0FE1Ch,R12
                   225   ; gpt2.c    137 
                   226   ; gpt2.c    138 
                   227   ; gpt2.c    139   _nop();  // one cycle delay 
                   228           ?LINE   139
0006 CC00          229           NOP
                   230   ; gpt2.c    140 
                   231   ; gpt2.c    141   _nop();  // one cycle delay 
                   232           ?LINE   141
0008 CC00          233           NOP
                   234   ; gpt2.c    142 
                   235   ; gpt2.c    143 
                   236   ; gpt2.c    144   ///  -----------------------------------------------------------------------
                   237   ; gpt2.c    145   ///  Configuration of Timer Block Prescaler 2:
                   238   ; gpt2.c    146   ///  -----------------------------------------------------------------------
                   239   ; gpt2.c    147   ///  - prescaler for timer block 2 is 2
                   240   ; gpt2.c    148 
                   241   ; gpt2.c    149 
                   242   ; gpt2.c    150   ///  -----------------------------------------------------------------------
                   243   ; gpt2.c    151   ///  Configuration of the GPT2 Core Timer 5:
                   244   ; gpt2.c    152   ///  -----------------------------------------------------------------------
                   245   ; gpt2.c    153   ///  - timer 5 works in timer mode
                   246   ; gpt2.c    154   ///  - prescaler factor is 2
                   247   ; gpt2.c    155   ///  - up/down control bit is reset
                   248   ; gpt2.c    156   ///  - external up/down control is disabled
                   249   ; gpt2.c    157   ///  - timer 5 run bit is reset
                   250   ; gpt2.c    158   ///  - timer 5 remote control is disabled
                   251   ; gpt2.c    159 
                   252   ; gpt2.c    160   GPT12E_T5CON   =  0x0000;      // load timer 5 control register
                   253           ?LINE   160
000A E00C          254           MOV     R12,#00h
000C F6FC46FF      255           MOV     0FF46h,R12
                   256   ; gpt2.c    161   GPT12E_T5      =  0xFFFF;      // load timer 5 register
                   257           ?LINE   161
0010 E6FCFFFF      258           MOV     R12,#0FFFFh
0014 F6FC46FE      259           MOV     0FE46h,R12
                   260   ; gpt2.c    162 
                   261   ; gpt2.c    163   ///  -----------------------------------------------------------------------
                   262   ; gpt2.c    164   ///  Configuration of the GPT2 Core Timer 6:
                   263   ; gpt2.c    165   ///  -----------------------------------------------------------------------
                   264   ; gpt2.c    166   ///  - timer 6 works in timer mode
                   265   ; gpt2.c    167   ///  - prescaler factor is 8
                   266   ; gpt2.c    168   ///  - up/down control bit is reset
                   267   ; gpt2.c    169   ///  - external up/down control is disabled
                   268   ; gpt2.c    170   ///  - alternate output function T6OUT (P6.2) is disabled
                   269   ; gpt2.c    171   ///  - alternate output function T6OUT (P7.0) is disabled
                   270   ; gpt2.c    172   ///  - timer 6 output toggle latch (T6OTL) is set to 0
                   271   ; gpt2.c    173   ///  - timer 6 run bit is reset
                   272   ; gpt2.c    174   ///  - timer 6 is not cleared on a capture
                   273   ; gpt2.c    175 
                   274   ; gpt2.c    176   GPT12E_T6CON   =  0x0802;      // load timer 6 control register
                   275           ?LINE   176
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   6
gpt2

 LOC CODE        LINE   SOURCELINE

0018 E6FC0208      276           MOV     R12,#0802h
001C F6FC48FF      277           MOV     0FF48h,R12
                   278   ; gpt2.c    177   GPT12E_T6      =  0x0218;      // load timer 6 register
                   279           ?LINE   177
0020 E6FC1802      280           MOV     R12,#0218h
0024 F6FC48FE      281           MOV     0FE48h,R12
                   282   ; gpt2.c    178 
                   283   ; gpt2.c    179   ///  -----------------------------------------------------------------------
                   284   ; gpt2.c    180   ///  Configuration of the GPT2 CAPREL:
                   285   ; gpt2.c    181   ///  -----------------------------------------------------------------------
                   286   ; gpt2.c    182   ///  - capture T5 into CAPREL is disabled
                   287   ; gpt2.c    183   ///  - capture trigger from pin CAPIN
                   288   ; gpt2.c    184   ///  - capure is disabled
                   289   ; gpt2.c    185   ///  - timer 5 is not cleared on a capture
                   290   ; gpt2.c    186   ///  - timer 5 is just captured without any correction
                   291   ; gpt2.c    187 
                   292   ; gpt2.c    188   GPT12E_T5CON  |=  0x0000;      // load timer 5 control register
                   293           ?LINE   188
0028 E6FC46FF      294           MOV     R12,#0FF46h
002C A8CC          295           MOV     R12,[R12]
                   296   ; gpt2.c    189   GPT12E_CAPREL  =  0x0218;      // load CAPREL register
                   297           ?LINE   189
002E E6FC1802      298           MOV     R12,#0218h
0032 F6FC4AFE      299           MOV     0FE4Ah,R12
                   300   ; gpt2.c    190 
                   301   ; gpt2.c    191   ///  -----------------------------------------------------------------------
                   302   ; gpt2.c    192   ///  Configuration of the used GPT2 Port Pins:
                   303   ; gpt2.c    193   ///  -----------------------------------------------------------------------
                   304   ; gpt2.c    194   ///  - P5.3 is used for  GPT12E Timer2 Count input(T3IN)
                   305   ; gpt2.c    195 
                   306   ; gpt2.c    196 
                   307   ; gpt2.c    197   ///  -----------------------------------------------------------------------
                   308   ; gpt2.c    198   ///  Configuration of the used GPT2 Interrupts:
                   309   ; gpt2.c    199   ///  -----------------------------------------------------------------------
                   310   ; gpt2.c    200   ///  timer 6 service request node configuration:
                   311   ; gpt2.c    201   ///  - timer 6 interrupt priority level (ILVL) = 14
                   312   ; gpt2.c    202   ///  - timer 6 interrupt group level (GLVL) = 0
                   313   ; gpt2.c    203   ///  - timer 6 group priority extension (GPX) = 0
                   314   ; gpt2.c    204 
                   315   ; gpt2.c    205   GPT12E_T6IC    =  0x0078;     
                   316           ?LINE   205
0036 E6FC7800      317           MOV     R12,#078h
003A F6FC68FF      318           MOV     0FF68h,R12
                   319   ; gpt2.c    206 
                   320   ; gpt2.c    207   ///  Use PEC channel 0 for GPT2 T6 INT:
                   321   ; gpt2.c    208   ///  - normal interrupt
                   322   ; gpt2.c    209   ///  - pointers are not modified
                   323   ; gpt2.c    210   ///  - transfer a word
                   324   ; gpt2.c    211   ///  - service End of PEC interrrupt by a EOP interrupt node is disabled
                   325   ; gpt2.c    212   ///  - channel link mode is disabled
                   326   ; gpt2.c    213 
                   327   ; gpt2.c    214   PECC0          =  0x0000;      // load PECC0 control register
                   328           ?LINE   214
003E E00C          329           MOV     R12,#00h
0040 F6FCC0FE      330           MOV     0FEC0h,R12
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   7
gpt2

 LOC CODE        LINE   SOURCELINE

                   331   ; gpt2.c    215 
                   332   ; gpt2.c    216 
                   333   ; gpt2.c    217 
                   334   ; gpt2.c    218 
                   335   ; gpt2.c    219   // USER CODE BEGIN (GPT2_Function,3)
                   336   ; gpt2.c    220 
                   337   ; gpt2.c    221   // USER CODE END
                   338   ; gpt2.c    222 
                   339   ; gpt2.c    223 } //  End of function GPT2_viCAPREL
                   340           ?LINE   223
0044 DB00          341           RETS
                   342   _GPT2_vInit     ENDP
               R   343           ?SYMB   '',$,17,223
                   344   ; gpt2.c    224 
                   345   ; gpt2.c    225 //****************************************************************************
                   346   ; gpt2.c    226 // @Function      void GPT2_viTmr6(void) 
                   347   ; gpt2.c    227 //
                   348   ; gpt2.c    228 //----------------------------------------------------------------------------
                   349   ; gpt2.c    229 // @Description   This is the interrupt service routine for the GPT2 timer 6. 
                   350   ; gpt2.c    230 //                It is called up in the case of over or underflow of the 
                   351   ; gpt2.c    231 //                timer 6 register.
                   352   ; gpt2.c    232 //                
                   353   ; gpt2.c    233 //                Please note that you have to add application specific code 
                   354   ; gpt2.c    234 //                to this function.
                   355   ; gpt2.c    235 //
                   356   ; gpt2.c    236 //----------------------------------------------------------------------------
                   357   ; gpt2.c    237 // @Returnvalue   None
                   358   ; gpt2.c    238 //
                   359   ; gpt2.c    239 //----------------------------------------------------------------------------
                   360   ; gpt2.c    240 // @Parameters    None
                   361   ; gpt2.c    241 //
                   362   ; gpt2.c    242 //----------------------------------------------------------------------------
                   363   ; gpt2.c    243 // @Date          29.09.2021
                   364   ; gpt2.c    244 //
                   365   ; gpt2.c    245 //****************************************************************************
                   366   ; gpt2.c    246 
                   367   ; gpt2.c    247 // USER CODE BEGIN (Tmr6,1)
                   368   ; gpt2.c    248 
                   369   ; gpt2.c    249 // USER CODE END
                   370   ; gpt2.c    250 
                   371   ; gpt2.c    251 _interrupt(T6INT)  void GPT2_viTmr6(void)
                   372   ; gpt2.c    252 {
               R   373           ?SYMB   'GPT2_viTmr6',_GPT2_viTmr6,37,1
                   374           ?SYMB   '',252,8,16
                   375   _GPT2_viTmr6    PROC TASK GPT2_TASK INTNO GPT2_INUM = 024h
                   376           ?LINE   252
                   377           ?SYMB   '',00H,95,0
0046 F6F00000  R   378           MOV     GPT2_RB,R0
004A C6080000  R   379           SCXT    CP,#GPT2_RB
004E C6871000      380           SCXT    MDC,#010h
0052 EC00          381           PUSH    DPP0
0054 E6000000  R   382           MOV     DPP0,#PAG ?BASE_DPP0
0058 CC00          383           NOP
005A EC02          384           PUSH    DPP2
005C E6020000  R   385           MOV     DPP2,#PAG ?BASE_DPP2
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   8
gpt2

 LOC CODE        LINE   SOURCELINE

0060 CC00          386           NOP
0062 EC06          387           PUSH    MDH
0064 EC07          388           PUSH    MDL
0066 ECEF          389           PUSH    MSW
0068 EC2E          390           PUSH    MAL
006A EC2F          391           PUSH    MAH
006C ECEE          392           PUSH    MCW
006E C6ED0000      393           SCXT    MRW,#00h
0072 EC84          394           PUSH    IDX0
0074 EC85          395           PUSH    IDX1
0076 D180          396           EXTR    #01h
0078 EC00     1    397           PUSH    QX0
007A D180          398           EXTR    #01h
007C EC01     1    399           PUSH    QX1
007E D180          400           EXTR    #01h
0080 EC02     1    401           PUSH    QR0
0082 D180          402           EXTR    #01h
0084 EC03     1    403           PUSH    QR1
                   404   ; Locals:
                   405   ; 
                   406   ; Statics:
                   407   ; 
                   408   ; CSEs:
                   409   ; 
                   410   ; gpt2.c    253   // USER CODE BEGIN (Tmr6,2)
                   411   ; gpt2.c    254          rampIndex++;
                   412           ?LINE   254
0086 F2FC0000  R   413           MOV     R12,_rampIndex
008A 08C1          414           ADD     R12,#01h
008C F6FC0000  R   415           MOV     _rampIndex,R12
                   416   ; gpt2.c    255          
                   417   ; gpt2.c    256          inc = GPT12E_T4;
                   418           ?LINE   256
0090 F2FC44FE      419           MOV     R12,0FE44h
0094 F6FC0000  R   420           MOV     _inc,R12
                   421   ; gpt2.c    257          velocity = (1000 * (float) inc)/(8);
                   422           ?LINE   257
0098 F2F40000  R   423           MOV     R4,_inc
009C DA000000  R   424           CALLS   SEG __cuf24r,__cuf24r
00A0 E6FA7A44      425           MOV     R10,#0447Ah
00A4 E00B          426           MOV     R11,#00h
00A6 DA000000  R   427           CALLS   SEG __mlf4r,__mlf4r
00AA E6FA0041      428           MOV     R10,#04100h
00AE E00B          429           MOV     R11,#00h
00B0 DA000000  R   430           CALLS   SEG __dvf4r,__dvf4r
00B4 F6F40000  R   431           MOV     _velocity,R4
00B8 F6F50000  R   432           MOV     (_velocity+2),R5
                   433   ; gpt2.c    258          velocity = velocity/2048;
                   434           ?LINE   258
00BC F2F40000  R   435           MOV     R4,_velocity
00C0 F2F50000  R   436           MOV     R5,(_velocity+2)
00C4 E6FA0045      437           MOV     R10,#04500h
00C8 E00B          438           MOV     R11,#00h
00CA DA000000  R   439           CALLS   SEG __dvf4r,__dvf4r
00CE F6F40000  R   440           MOV     _velocity,R4
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:   9
gpt2

 LOC CODE        LINE   SOURCELINE

00D2 F6F50000  R   441           MOV     (_velocity+2),R5
                   442   ; gpt2.c    259          rpm = velocity * 60;
                   443           ?LINE   259
00D6 F2F40000  R   444           MOV     R4,_velocity
00DA F2F50000  R   445           MOV     R5,(_velocity+2)
00DE E6FA7042      446           MOV     R10,#04270h
00E2 E00B          447           MOV     R11,#00h
00E4 DA000000  R   448           CALLS   SEG __mlf4r,__mlf4r
00E8 F6F40000  R   449           MOV     _rpm,R4
00EC F6F50000  R   450           MOV     (_rpm+2),R5
                   451   ; gpt2.c    260          GPT12E_T4 = 0;
                   452           ?LINE   260
00F0 E00C          453           MOV     R12,#00h
00F2 F6FC44FE      454           MOV     0FE44h,R12
                   455   ; gpt2.c    261   // USER CODE END
                   456   ; gpt2.c    262 
                   457   ; gpt2.c    263 } //  End of function GPT2_viTmr6
                   458           ?LINE   263
00F6 D180          459           EXTR    #01h
00F8 FC03     1    460           POP     QR1
00FA D180          461           EXTR    #01h
00FC FC02     1    462           POP     QR0
00FE D180          463           EXTR    #01h
0100 FC01     1    464           POP     QX1
0102 D180          465           EXTR    #01h
0104 FC00     1    466           POP     QX0
0106 FC85          467           POP     IDX1
0108 FC84          468           POP     IDX0
010A FCED          469           POP     MRW
010C FCEE          470           POP     MCW
010E FC2F          471           POP     MAH
0110 FC2E          472           POP     MAL
0112 FCEF          473           POP     MSW
0114 FC07          474           POP     MDL
0116 FC06          475           POP     MDH
0118 FC02          476           POP     DPP2
011A FC00          477           POP     DPP0
011C FC87          478           POP     MDC
011E FC08          479           POP     CP
                   480           ?LINE   263
0120 FB88          481           RETI
                   482   _GPT2_viTmr6    ENDP
               R   483           ?SYMB   '',$,17,263
                   484   ; gpt2.c    264 
                   485   ; gpt2.c    265 
                   486   ; gpt2.c    266 
                   487   ; gpt2.c    267 
                   488   ; gpt2.c    268 // USER CODE BEGIN (GPT2_General,10)
                   489   ; gpt2.c    269 
                   490   ; gpt2.c    270 // USER CODE END
                   491   ; gpt2.c    271 
                   492   GPT2_1_PR       ENDS
                   493   
                   494   GPT2_2_NB       SECTION LDAT WORD PUBLIC 'CNEAR'
0000               495   GPT2_2_NB_ENTRY LABEL   BYTE
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 29 2021  Time: 09:41:21  Page:  10
gpt2

 LOC CODE        LINE   SOURCELINE

0000               496   _inc    LABEL   WORD
0000               497           DS      2
                   498           PUBLIC  _inc
               R   499           ?SYMB   'inc',_inc,22,18
                   500   GPT2_2_NB       ENDS
                   501   
                   502   C166_BSS        SECTION PDAT WORD GLOBAL 'CINITROM'
0000 05000000  R   503           DW      05h,GPT2_2_NB_ENTRY,02h
0004 0200        
                   504   C166_BSS        ENDS
                   505   
                   506   $FLOAT(ANSI)
                   507           EXTERN  _rpm:WORD
                   508           EXTERN  _velocity:WORD
                   509           EXTERN  _rampIndex:WORD
                   510           EXTERN  __cuf24r:FAR
                   511           EXTERN  __mlf4r:FAR
                   512           EXTERN  __dvf4r:FAR
                   513   GPT2_RB REGDEF  R0-R15
                   514           END

total errors: 0, warnings: 0

