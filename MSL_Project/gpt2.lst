TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   1
gpt2

 LOC CODE        LINE   SOURCELINE

                     1   ; TASKING C166/ST10 C compiler v8.7r1 Build 775
                     2   ; options: -e -Id:\programme\tasking\c166 v8.7r1\include -x2 -Bhoeufmknladij -OB
                     3   ;          -OE -zswitch_tabmem_default -zautobitastruct-4 -zautobita-0 -FSC -A1
                     4   ;          -zvolatile_union -O0 -g -newerr -s -i0 -Ms
                     5   $DEBUG
                     6   $NOLOCALS
                     7   $EXTEND2
                     8   $NOMOD166
                     9   $STDNAMES(regsuper10bo.def)
                    10   $EXTMAC
                    11   $CASE
                    12   $NOEXPANDREGBANK
                    13   $MODEL(SMALL)
                    14           NAME    GPT2_C
                    15           ?SYMB   'gpt2.c',32,80,16
                    16           ?SYMB   '',1,82,0
                    17           ?SYMB   '80166',0,84,0
                    18           ?SYMB   '',0,81,0
                    19           ?SYMB   'void',00H,45,1
                    20           ?SYMB   'char',080000H,45,2
                    21           ?SYMB   'unsigned char',080000H,45,3
                    22           ?SYMB   'short',0100000H,45,4
                    23           ?SYMB   'unsigned short',0100000H,45,5
                    24           ?SYMB   'long',0200000H,45,6
                    25           ?SYMB   'unsigned long',0200000H,45,7
                    26           ?SYMB   'float',0200000H,45,10
                    27           ?SYMB   'double',0400000H,45,11
                    28           ?SYMB   'int',0100000H,45,16
                    29           ?SYMB   'unsigned int',0100000H,45,18
                    30           ?SYMB   'bit',010000H,7,256
                    31           ?SYMB   'gpt2.c',0,29,1
                    32           ?SYMB   '',0,86,1
                    33   ; gpt2.c      1 //****************************************************************************
                    34   ; gpt2.c      2 // @Module        General Purpose Timer Unit (GPT2)
                    35   ; gpt2.c      3 // @Filename      GPT2.C
                    36   ; gpt2.c      4 // @Project       DAvE_config.dav
                    37   ; gpt2.c      5 //----------------------------------------------------------------------------
                    38   ; gpt2.c      6 // @Controller    Infineon XE167F-96F66
                    39   ; gpt2.c      7 //
                    40   ; gpt2.c      8 // @Compiler      Tasking Classic
                    41   ; gpt2.c      9 //
                    42   ; gpt2.c     10 // @Codegenerator 2.2
                    43   ; gpt2.c     11 //
                    44   ; gpt2.c     12 // @Description   This file contains functions that use the GPT2 module.
                    45   ; gpt2.c     13 //
                    46   ; gpt2.c     14 //----------------------------------------------------------------------------
                    47   ; gpt2.c     15 // @Date          23.09.2021 16:17:13
                    48   ; gpt2.c     16 //
                    49   ; gpt2.c     17 //****************************************************************************
                    50   ; gpt2.c     18 
                    51   ; gpt2.c     19 // USER CODE BEGIN (GPT2_General,1)
                    52   ; gpt2.c     20 
                    53   ; gpt2.c     21 // USER CODE END
                    54   ; gpt2.c     22 
                    55   ; gpt2.c     23 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   2
gpt2

 LOC CODE        LINE   SOURCELINE

                    56   ; gpt2.c     24 
                    57   ; gpt2.c     25 //****************************************************************************
                    58   ; gpt2.c     26 // @Project Includes
                    59   ; gpt2.c     27 //****************************************************************************
                    60   ; gpt2.c     28 
                    61   ; gpt2.c     29 #include "MAIN.H"
                    62           ?SYMB   'MAIN.H',0,29,2
                    63           ?SYMB   '',0,86,2
                    64           ?SYMB   'XE16xREGS.H',0,29,3
                    65           ?SYMB   '',0,86,3
                    66           ?SYMB   '',0,86,2
                    67           ?SYMB   'SCS.H',0,29,3
                    68           ?SYMB   '',0,86,3
                    69           ?SYMB   'T$2',0,14,257
                    70           ?SYMB   'SCS_EXTCLK_F_SYS',0,33,257
                    71           ?SYMB   'SCS_EXTCLK_F_OUT',1,33,257
                    72           ?SYMB   'SCS_EXTCLK_F_PLL',2,33,257
                    73           ?SYMB   'SCS_EXTCLK_F_OSC',3,33,257
                    74           ?SYMB   'SCS_EXTCLK_F_WU',4,33,257
                    75           ?SYMB   'SCS_EXTCLK_F_TCK',5,33,257
                    76           ?SYMB   'SCS_EXTCLK_F_OSC_FL',6,33,257
                    77           ?SYMB   'SCS_EXTCLK_F_RTC',8,33,257
                    78           ?SYMB   '',16,16,0
                    79           ?SYMB   'SCS_EXTCLK_Type',257,13,258
                    80           ?SYMB   '',0,86,2
                    81           ?SYMB   'IO.H',0,29,3
                    82           ?SYMB   '',0,86,3
                    83           ?SYMB   '',0,86,2
                    84           ?SYMB   'GPT1.H',0,29,3
                    85           ?SYMB   '',0,86,3
                    86           ?SYMB   '',0,86,2
                    87           ?SYMB   'GPT2.H',0,29,3
                    88           ?SYMB   '',0,86,3
                    89           ?SYMB   '',0,86,2
                    90           ?SYMB   'CCU63.H',0,29,3
                    91           ?SYMB   '',0,86,3
                    92           ?SYMB   '',0,86,2
                    93           ?SYMB   '',0,86,1
                    94   ; gpt2.c     30 
                    95   ; gpt2.c     31 // USER CODE BEGIN (GPT2_General,2)
                    96   ; gpt2.c     32 
                    97   ; gpt2.c     33 // USER CODE END
                    98   ; gpt2.c     34 
                    99   ; gpt2.c     35 
                   100   ; gpt2.c     36 //****************************************************************************
                   101   ; gpt2.c     37 // @Macros
                   102   ; gpt2.c     38 //****************************************************************************
                   103   ; gpt2.c     39 
                   104   ; gpt2.c     40 // USER CODE BEGIN (GPT2_General,3)
                   105   ; gpt2.c     41 
                   106   ; gpt2.c     42 // USER CODE END
                   107   ; gpt2.c     43 
                   108   ; gpt2.c     44 
                   109   ; gpt2.c     45 //****************************************************************************
                   110   ; gpt2.c     46 // @Defines
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   3
gpt2

 LOC CODE        LINE   SOURCELINE

                   111   ; gpt2.c     47 //****************************************************************************
                   112   ; gpt2.c     48 
                   113   ; gpt2.c     49 // USER CODE BEGIN (GPT2_General,4)
                   114   ; gpt2.c     50 
                   115   ; gpt2.c     51 // USER CODE END
                   116   ; gpt2.c     52 
                   117   ; gpt2.c     53 
                   118   ; gpt2.c     54 //****************************************************************************
                   119   ; gpt2.c     55 // @Typedefs
                   120   ; gpt2.c     56 //****************************************************************************
                   121   ; gpt2.c     57 
                   122   ; gpt2.c     58 // USER CODE BEGIN (GPT2_General,5)
                   123   ; gpt2.c     59 
                   124   ; gpt2.c     60 // USER CODE END
                   125   ; gpt2.c     61 
                   126   ; gpt2.c     62 
                   127   ; gpt2.c     63 //****************************************************************************
                   128   ; gpt2.c     64 // @Imported Global Variables
                   129   ; gpt2.c     65 //****************************************************************************
                   130   ; gpt2.c     66 
                   131   ; gpt2.c     67 // USER CODE BEGIN (GPT2_General,6)
                   132   ; gpt2.c     68         extern  unsigned int index;
                   133   ; gpt2.c     69 // USER CODE END
                   134   ; gpt2.c     70 
                   135   ; gpt2.c     71 
                   136   ; gpt2.c     72 //****************************************************************************
                   137   ; gpt2.c     73 // @Global Variables
                   138   ; gpt2.c     74 //****************************************************************************
                   139   ; gpt2.c     75 
                   140   ; gpt2.c     76 // USER CODE BEGIN (GPT2_General,7)
                   141   ; gpt2.c     77 
                   142   ; gpt2.c     78 // USER CODE END
                   143   ; gpt2.c     79 
                   144   ; gpt2.c     80 
                   145   ; gpt2.c     81 //****************************************************************************
                   146   ; gpt2.c     82 // @External Prototypes
                   147   ; gpt2.c     83 //****************************************************************************
                   148   ; gpt2.c     84 
                   149   ; gpt2.c     85 // USER CODE BEGIN (GPT2_General,8)
                   150   ; gpt2.c     86 
                   151   ; gpt2.c     87 // USER CODE END
                   152   ; gpt2.c     88 
                   153   ; gpt2.c     89 
                   154   ; gpt2.c     90 
                   155   ; gpt2.c     91 //****************************************************************************
                   156   ; gpt2.c     92 // @Prototypes Of Local Functions
                   157   ; gpt2.c     93 //****************************************************************************
                   158   ; gpt2.c     94 
                   159   ; gpt2.c     95 // USER CODE BEGIN (GPT2_General,9)
                   160   ; gpt2.c     96 
                   161   ; gpt2.c     97 // USER CODE END
                   162   ; gpt2.c     98 
                   163   ; gpt2.c     99 
                   164   ; gpt2.c    100 //****************************************************************************
                   165   ; gpt2.c    101 // @Function      void GPT2_vInit(void) 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   4
gpt2

 LOC CODE        LINE   SOURCELINE

                   166   ; gpt2.c    102 //
                   167   ; gpt2.c    103 //----------------------------------------------------------------------------
                   168   ; gpt2.c    104 // @Description   This is the initialization function of the GPT2 function 
                   169   ; gpt2.c    105 //                library. It is assumed that the SFRs used by this library 
                   170   ; gpt2.c    106 //                are in reset state. 
                   171   ; gpt2.c    107 //
                   172   ; gpt2.c    108 //----------------------------------------------------------------------------
                   173   ; gpt2.c    109 // @Returnvalue   None
                   174   ; gpt2.c    110 //
                   175   ; gpt2.c    111 //----------------------------------------------------------------------------
                   176   ; gpt2.c    112 // @Parameters    None
                   177   ; gpt2.c    113 //
                   178   ; gpt2.c    114 //----------------------------------------------------------------------------
                   179   ; gpt2.c    115 // @Date          23.09.2021
                   180   ; gpt2.c    116 //
                   181   ; gpt2.c    117 //****************************************************************************
                   182   ; gpt2.c    118 
                   183   ; gpt2.c    119 // USER CODE BEGIN (Init,1)
                   184   ; gpt2.c    120 
                   185   ; gpt2.c    121 // USER CODE END
                   186   ; gpt2.c    122 
                   187   ; gpt2.c    123 void GPT2_vInit(void)
                   188   ; gpt2.c    124 {
                   189   GPT2_1_PR       SECTION CODE WORD PUBLIC 'CPROGRAM'
                   190           ?LINE   124
                   191           PUBLIC  _GPT2_vInit
               R   192           ?SYMB   'GPT2_vInit',_GPT2_vInit,37,1
                   193           ?SYMB   '',124,8,34
                   194           ?SYMB   'uword',18,13,260
                   195           ?SYMB   '',010000H,7,261
                   196           ?SYMB   '',010001H,7,262
                   197           ?SYMB   '',010002H,7,263
                   198           ?SYMB   '',010003H,7,264
                   199           ?SYMB   '',010004H,7,265
                   200           ?SYMB   '',010005H,7,266
                   201           ?SYMB   '',010006H,7,267
                   202           ?SYMB   '',010007H,7,268
                   203           ?SYMB   '',010000H,7,269
                   204           ?SYMB   '',010001H,7,270
                   205           ?SYMB   '',010002H,7,271
                   206           ?SYMB   '',010003H,7,272
                   207           ?SYMB   '',010004H,7,273
                   208           ?SYMB   '',010005H,7,274
                   209           ?SYMB   '',010006H,7,275
                   210           ?SYMB   '',010007H,7,276
                   211           ?SYMB   'T$1',0,40,277
                   212           ?SYMB   'bit0',0,23,261
                   213           ?SYMB   'bit1',1,23,262
                   214           ?SYMB   'bit2',2,23,263
                   215           ?SYMB   'bit3',3,23,264
                   216           ?SYMB   'bit4',4,23,265
                   217           ?SYMB   'bit5',5,23,266
                   218           ?SYMB   'bit6',6,23,267
                   219           ?SYMB   'bit7',7,23,268
                   220           ?SYMB   'bit8',8,23,269
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   5
gpt2

 LOC CODE        LINE   SOURCELINE

                   221           ?SYMB   'bit9',9,23,270
                   222           ?SYMB   'bit10',10,23,271
                   223           ?SYMB   'bit11',11,23,272
                   224           ?SYMB   'bit12',12,23,273
                   225           ?SYMB   'bit13',13,23,274
                   226           ?SYMB   'bit14',14,23,275
                   227           ?SYMB   'bit15',15,23,276
                   228           ?SYMB   '',16,18,0
                   229           ?SYMB   'T_Reg16',277,13,278
                   230   _GPT2_vInit     PROC    FAR
                   231           ?SYMB   '',00H,95,0
                   232   ; Locals:
                   233   ; 
                   234   ; Statics:
                   235   ; 
                   236   ; CSEs:
                   237   ; 
                   238   ; gpt2.c    125 
                   239   ; gpt2.c    126   // USER CODE BEGIN (Init,2)
                   240   ; gpt2.c    127 
                   241   ; gpt2.c    128   // USER CODE END
                   242   ; gpt2.c    129   ///  -----------------------------------------------------------------------
                   243   ; gpt2.c    130   ///  Configuration of Timer Block Prescaler 1:
                   244   ; gpt2.c    131   ///  -----------------------------------------------------------------------
                   245   ; gpt2.c    132   GPT12E_KSCCFG  =  0x0003;      // Module Enable
                   246           ?LINE   132
0000 E03C          247           MOV     R12,#03h
0002 F6FC1CFE      248           MOV     0FE1Ch,R12
                   249   ; gpt2.c    133 
                   250   ; gpt2.c    134 
                   251   ; gpt2.c    135   _nop();  // one cycle delay 
                   252           ?LINE   135
0006 CC00          253           NOP
                   254   ; gpt2.c    136 
                   255   ; gpt2.c    137   _nop();  // one cycle delay 
                   256           ?LINE   137
0008 CC00          257           NOP
                   258   ; gpt2.c    138 
                   259   ; gpt2.c    139 
                   260   ; gpt2.c    140   ///  -----------------------------------------------------------------------
                   261   ; gpt2.c    141   ///  Configuration of Timer Block Prescaler 2:
                   262   ; gpt2.c    142   ///  -----------------------------------------------------------------------
                   263   ; gpt2.c    143   ///  - prescaler for timer block 2 is 2
                   264   ; gpt2.c    144 
                   265   ; gpt2.c    145 
                   266   ; gpt2.c    146   ///  -----------------------------------------------------------------------
                   267   ; gpt2.c    147   ///  Configuration of the GPT2 Core Timer 5:
                   268   ; gpt2.c    148   ///  -----------------------------------------------------------------------
                   269   ; gpt2.c    149   ///  - timer 5 works in timer mode
                   270   ; gpt2.c    150   ///  - prescaler factor is 2
                   271   ; gpt2.c    151   ///  - up/down control bit is reset
                   272   ; gpt2.c    152   ///  - external up/down control is disabled
                   273   ; gpt2.c    153   ///  - timer 5 remote control is disabled
                   274   ; gpt2.c    154 
                   275   ; gpt2.c    155   GPT12E_T5CON   =  0x0000;      // load timer 5 control register
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   6
gpt2

 LOC CODE        LINE   SOURCELINE

                   276           ?LINE   155
000A E00C          277           MOV     R12,#00h
000C F6FC46FF      278           MOV     0FF46h,R12
                   279   ; gpt2.c    156   GPT12E_T5      =  0xF615;      // load timer 5 register
                   280           ?LINE   156
0010 E6FC15F6      281           MOV     R12,#0F615h
0014 F6FC46FE      282           MOV     0FE46h,R12
                   283   ; gpt2.c    157 
                   284   ; gpt2.c    158   ///  -----------------------------------------------------------------------
                   285   ; gpt2.c    159   ///  Configuration of the GPT2 Core Timer 6:
                   286   ; gpt2.c    160   ///  -----------------------------------------------------------------------
                   287   ; gpt2.c    161   ///  - timer 6 works in timer mode
                   288   ; gpt2.c    162   ///  - prescaler factor is 2
                   289   ; gpt2.c    163   ///  - up/down control bit is reset
                   290   ; gpt2.c    164   ///  - external up/down control is disabled
                   291   ; gpt2.c    165   ///  - alternate output function T6OUT (P6.2) is disabled
                   292   ; gpt2.c    166   ///  - alternate output function T6OUT (P7.0) is disabled
                   293   ; gpt2.c    167   ///  - timer 6 output toggle latch (T6OTL) is set to 0
                   294   ; gpt2.c    168   ///  - timer 6 run bit is reset
                   295   ; gpt2.c    169   ///  - timer 6 is not cleared on a capture
                   296   ; gpt2.c    170 
                   297   ; gpt2.c    171   GPT12E_T6CON   =  0x0800;      // load timer 6 control register
                   298           ?LINE   171
0018 E6FC0008      299           MOV     R12,#0800h
001C F6FC48FF      300           MOV     0FF48h,R12
                   301   ; gpt2.c    172   GPT12E_T6      =  0x0000;      // load timer 6 register
                   302           ?LINE   172
0020 E00C          303           MOV     R12,#00h
0022 F6FC48FE      304           MOV     0FE48h,R12
                   305   ; gpt2.c    173 
                   306   ; gpt2.c    174   ///  -----------------------------------------------------------------------
                   307   ; gpt2.c    175   ///  Configuration of the GPT2 CAPREL:
                   308   ; gpt2.c    176   ///  -----------------------------------------------------------------------
                   309   ; gpt2.c    177   ///  - capture T5 into CAPREL is disabled
                   310   ; gpt2.c    178   ///  - capture trigger from pin CAPIN
                   311   ; gpt2.c    179   ///  - capure is disabled
                   312   ; gpt2.c    180   ///  - timer 5 is not cleared on a capture
                   313   ; gpt2.c    181   ///  - timer 5 is just captured without any correction
                   314   ; gpt2.c    182 
                   315   ; gpt2.c    183   GPT12E_T5CON  |=  0x0000;      // load timer 5 control register
                   316           ?LINE   183
0026 E6FC46FF      317           MOV     R12,#0FF46h
002A A8CC          318           MOV     R12,[R12]
                   319   ; gpt2.c    184   GPT12E_CAPREL  =  0x0000;      // load CAPREL register
                   320           ?LINE   184
002C E00C          321           MOV     R12,#00h
002E F6FC4AFE      322           MOV     0FE4Ah,R12
                   323   ; gpt2.c    185 
                   324   ; gpt2.c    186   ///  -----------------------------------------------------------------------
                   325   ; gpt2.c    187   ///  Configuration of the used GPT2 Port Pins:
                   326   ; gpt2.c    188   ///  -----------------------------------------------------------------------
                   327   ; gpt2.c    189 
                   328   ; gpt2.c    190 
                   329   ; gpt2.c    191   ///  -----------------------------------------------------------------------
                   330   ; gpt2.c    192   ///  Configuration of the used GPT2 Interrupts:
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   7
gpt2

 LOC CODE        LINE   SOURCELINE

                   331   ; gpt2.c    193   ///  -----------------------------------------------------------------------
                   332   ; gpt2.c    194   ///  timer 5 service request node configuration:
                   333   ; gpt2.c    195   ///  - timer 5 interrupt priority level (ILVL) = 11
                   334   ; gpt2.c    196   ///  - timer 5 interrupt group level (GLVL) = 0
                   335   ; gpt2.c    197   ///  - timer 5 group priority extension (GPX) = 0
                   336   ; gpt2.c    198 
                   337   ; gpt2.c    199   GPT12E_T5IC    =  0x006C;     
                   338           ?LINE   199
0032 E6FC6C00      339           MOV     R12,#06Ch
0036 F6FC66FF      340           MOV     0FF66h,R12
                   341   ; gpt2.c    200 
                   342   ; gpt2.c    201 
                   343   ; gpt2.c    202 
                   344   ; gpt2.c    203   // USER CODE BEGIN (GPT2_Function,3)
                   345   ; gpt2.c    204 
                   346   ; gpt2.c    205   // USER CODE END
                   347   ; gpt2.c    206 
                   348   ; gpt2.c    207   GPT12E_T5CON_T5R  =  1;        // set timer 5 run bit
                   349           ?LINE   207
003A E6FC46FF      350           MOV     R12,#0FF46h
003E A8DC          351           MOV     R13,[R12]
0040 0AFD4040      352           BFLDL   R13,#040h,#040h
0044 B8DC          353           MOV     [R12],R13
                   354   ; gpt2.c    208 
                   355   ; gpt2.c    209 } //  End of function GPT2_viCAPREL
                   356           ?LINE   209
0046 DB00          357           RETS
                   358   _GPT2_vInit     ENDP
               R   359           ?SYMB   '',$,17,209
                   360   ; gpt2.c    210 
                   361   ; gpt2.c    211 //****************************************************************************
                   362   ; gpt2.c    212 // @Function      void GPT2_viTmr5(void) 
                   363   ; gpt2.c    213 //
                   364   ; gpt2.c    214 //----------------------------------------------------------------------------
                   365   ; gpt2.c    215 // @Description   This is the interrupt service routine for the GPT2 timer 5. 
                   366   ; gpt2.c    216 //                It is called up in the case of over or underflow of the 
                   367   ; gpt2.c    217 //                timer 5 register.
                   368   ; gpt2.c    218 //                
                   369   ; gpt2.c    219 //                Please note that you have to add application specific code 
                   370   ; gpt2.c    220 //                to this function.
                   371   ; gpt2.c    221 //
                   372   ; gpt2.c    222 //----------------------------------------------------------------------------
                   373   ; gpt2.c    223 // @Returnvalue   None
                   374   ; gpt2.c    224 //
                   375   ; gpt2.c    225 //----------------------------------------------------------------------------
                   376   ; gpt2.c    226 // @Parameters    None
                   377   ; gpt2.c    227 //
                   378   ; gpt2.c    228 //----------------------------------------------------------------------------
                   379   ; gpt2.c    229 // @Date          23.09.2021
                   380   ; gpt2.c    230 //
                   381   ; gpt2.c    231 //****************************************************************************
                   382   ; gpt2.c    232 
                   383   ; gpt2.c    233 // USER CODE BEGIN (Tmr5,1)
                   384   ; gpt2.c    234 
                   385   ; gpt2.c    235 // USER CODE END
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   8
gpt2

 LOC CODE        LINE   SOURCELINE

                   386   ; gpt2.c    236 
                   387   ; gpt2.c    237 _interrupt(T5INT)  void GPT2_viTmr5(void)
                   388   ; gpt2.c    238 {
               R   389           ?SYMB   'GPT2_viTmr5',_GPT2_viTmr5,37,1
                   390           ?SYMB   '',238,8,16
                   391   _GPT2_viTmr5    PROC TASK GPT2_TASK INTNO GPT2_INUM = 023h
                   392           ?LINE   238
                   393           ?SYMB   '',00H,95,0
0048 F6F00000  R   394           MOV     GPT2_RB,R0
004C C6080000  R   395           SCXT    CP,#GPT2_RB
0050 C6871000      396           SCXT    MDC,#010h
0054 EC00          397           PUSH    DPP0
0056 E6000000  R   398           MOV     DPP0,#PAG ?BASE_DPP0
005A CC00          399           NOP
005C EC02          400           PUSH    DPP2
005E E6020000  R   401           MOV     DPP2,#PAG ?BASE_DPP2
0062 CC00          402           NOP
0064 EC06          403           PUSH    MDH
0066 EC07          404           PUSH    MDL
0068 ECEF          405           PUSH    MSW
006A EC2E          406           PUSH    MAL
006C EC2F          407           PUSH    MAH
006E ECEE          408           PUSH    MCW
0070 C6ED0000      409           SCXT    MRW,#00h
0074 EC84          410           PUSH    IDX0
0076 EC85          411           PUSH    IDX1
0078 D180          412           EXTR    #01h
007A EC00     1    413           PUSH    QX0
007C D180          414           EXTR    #01h
007E EC01     1    415           PUSH    QX1
0080 D180          416           EXTR    #01h
0082 EC02     1    417           PUSH    QR0
0084 D180          418           EXTR    #01h
0086 EC03     1    419           PUSH    QR1
                   420   ; Locals:
                   421   ; 
                   422   ; Statics:
                   423   ; 
                   424   ; CSEs:
                   425   ; 
                   426   ; gpt2.c    239   // USER CODE BEGIN (Tmr5,2)
                   427   ; gpt2.c    240           index++;
                   428           ?LINE   240
0088 F2FC0000  R   429           MOV     R12,_index
008C 08C1          430           ADD     R12,#01h
008E F6FC0000  R   431           MOV     _index,R12
                   432   ; gpt2.c    241           index = index%ARRAY_SIZE;
                   433           ?LINE   241
0092 F2FC0000  R   434           MOV     R12,_index
0096 66FCFF00      435           AND     R12,#0FFh
009A F6FC0000  R   436           MOV     _index,R12
                   437   ; gpt2.c    242   // USER CODE END
                   438   ; gpt2.c    243 
                   439   ; gpt2.c    244 } //  End of function GPT2_viTmr5
                   440           ?LINE   244
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 23 2021  Time: 16:51:13  Page:   9
gpt2

 LOC CODE        LINE   SOURCELINE

009E D180          441           EXTR    #01h
00A0 FC03     1    442           POP     QR1
00A2 D180          443           EXTR    #01h
00A4 FC02     1    444           POP     QR0
00A6 D180          445           EXTR    #01h
00A8 FC01     1    446           POP     QX1
00AA D180          447           EXTR    #01h
00AC FC00     1    448           POP     QX0
00AE FC85          449           POP     IDX1
00B0 FC84          450           POP     IDX0
00B2 FCED          451           POP     MRW
00B4 FCEE          452           POP     MCW
00B6 FC2F          453           POP     MAH
00B8 FC2E          454           POP     MAL
00BA FCEF          455           POP     MSW
00BC FC07          456           POP     MDL
00BE FC06          457           POP     MDH
00C0 FC02          458           POP     DPP2
00C2 FC00          459           POP     DPP0
00C4 FC87          460           POP     MDC
00C6 FC08          461           POP     CP
                   462           ?LINE   244
00C8 FB88          463           RETI
                   464   _GPT2_viTmr5    ENDP
               R   465           ?SYMB   '',$,17,244
                   466   ; gpt2.c    245 
                   467   ; gpt2.c    246 
                   468   ; gpt2.c    247 
                   469   ; gpt2.c    248 
                   470   ; gpt2.c    249 // USER CODE BEGIN (GPT2_General,10)
                   471   ; gpt2.c    250 
                   472   ; gpt2.c    251 // USER CODE END
                   473   ; gpt2.c    252 
                   474   GPT2_1_PR       ENDS
                   475   
                   476           EXTERN  _index:WORD
                   477   GPT2_RB REGDEF  R0-R15
                   478           END

total errors: 0, warnings: 0

