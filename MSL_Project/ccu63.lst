TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   1
ccu63

 LOC CODE        LINE   SOURCELINE

                     1   ; TASKING C166/ST10 C compiler v8.7r1 Build 775
                     2   ; options: -e -Id:\programme\tasking\c166 v8.7r1\include -x2 -Bhoeufmknladij -OB
                     3   ;          -OE -zswitch_tabmem_default -zautobitastruct-4 -zautobita-0 -FSC -A1
                     4   ;          -zvolatile_union -O0 -g -newerr -s -i0 -Ms
                     5   $DEBUG
                     6   $NOLOCALS
                     7   $EXTEND2
                     8   $NOMOD166
                     9   $STDNAMES(regsuper10bo.def)
                    10   $EXTMAC
                    11   $CASE
                    12   $NOEXPANDREGBANK
                    13   $MODEL(SMALL)
                    14           NAME    CCU63_C
                    15           ?SYMB   'ccu63.c',32,80,16
                    16           ?SYMB   '',1,82,0
                    17           ?SYMB   '80166',0,84,0
                    18           ?SYMB   '',0,81,0
                    19           ?SYMB   'void',00H,45,1
                    20           ?SYMB   'char',080000H,45,2
                    21           ?SYMB   'unsigned char',080000H,45,3
                    22           ?SYMB   'short',0100000H,45,4
                    23           ?SYMB   'unsigned short',0100000H,45,5
                    24           ?SYMB   'long',0200000H,45,6
                    25           ?SYMB   'unsigned long',0200000H,45,7
                    26           ?SYMB   'float',0200000H,45,10
                    27           ?SYMB   'double',0400000H,45,11
                    28           ?SYMB   'int',0100000H,45,16
                    29           ?SYMB   'unsigned int',0100000H,45,18
                    30           ?SYMB   'bit',010000H,7,256
                    31           ?SYMB   'ccu63.c',0,29,1
                    32           ?SYMB   '',0,86,1
                    33   ; ccu63.c     1 //****************************************************************************
                    34   ; ccu63.c     2 // @Module        Capture / Compare Unit 63 (CCU63)
                    35   ; ccu63.c     3 // @Filename      CCU63.C
                    36   ; ccu63.c     4 // @Project       DAvE_config.dav
                    37   ; ccu63.c     5 //----------------------------------------------------------------------------
                    38   ; ccu63.c     6 // @Controller    Infineon XE167F-96F66
                    39   ; ccu63.c     7 //
                    40   ; ccu63.c     8 // @Compiler      Tasking Classic
                    41   ; ccu63.c     9 //
                    42   ; ccu63.c    10 // @Codegenerator 2.2
                    43   ; ccu63.c    11 //
                    44   ; ccu63.c    12 // @Description   This file contains functions that use the CCU63 module.
                    45   ; ccu63.c    13 //
                    46   ; ccu63.c    14 //----------------------------------------------------------------------------
                    47   ; ccu63.c    15 // @Date          28.09.2021 15:41:39
                    48   ; ccu63.c    16 //
                    49   ; ccu63.c    17 //****************************************************************************
                    50   ; ccu63.c    18 
                    51   ; ccu63.c    19 // USER CODE BEGIN (CCU63_General,1)
                    52   ; ccu63.c    20 
                    53   ; ccu63.c    21 // USER CODE END
                    54   ; ccu63.c    22 
                    55   ; ccu63.c    23 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   2
ccu63

 LOC CODE        LINE   SOURCELINE

                    56   ; ccu63.c    24 
                    57   ; ccu63.c    25 //****************************************************************************
                    58   ; ccu63.c    26 // @Project Includes
                    59   ; ccu63.c    27 //****************************************************************************
                    60   ; ccu63.c    28 
                    61   ; ccu63.c    29 #include "MAIN.H"
                    62           ?SYMB   'MAIN.H',0,29,2
                    63           ?SYMB   '',0,86,2
                    64           ?SYMB   'XE16xREGS.H',0,29,3
                    65           ?SYMB   '',0,86,3
                    66           ?SYMB   '',0,86,2
                    67           ?SYMB   'SCS.H',0,29,3
                    68           ?SYMB   '',0,86,3
                    69           ?SYMB   'T$2',0,14,257
                    70           ?SYMB   'SCS_EXTCLK_F_SYS',0,33,257
                    71           ?SYMB   'SCS_EXTCLK_F_OUT',1,33,257
                    72           ?SYMB   'SCS_EXTCLK_F_PLL',2,33,257
                    73           ?SYMB   'SCS_EXTCLK_F_OSC',3,33,257
                    74           ?SYMB   'SCS_EXTCLK_F_WU',4,33,257
                    75           ?SYMB   'SCS_EXTCLK_F_TCK',5,33,257
                    76           ?SYMB   'SCS_EXTCLK_F_OSC_FL',6,33,257
                    77           ?SYMB   'SCS_EXTCLK_F_RTC',8,33,257
                    78           ?SYMB   '',16,16,0
                    79           ?SYMB   'SCS_EXTCLK_Type',257,13,258
                    80           ?SYMB   '',0,86,2
                    81           ?SYMB   'IO.H',0,29,3
                    82           ?SYMB   '',0,86,3
                    83           ?SYMB   '',0,86,2
                    84           ?SYMB   'GPT1.H',0,29,3
                    85           ?SYMB   '',0,86,3
                    86           ?SYMB   '',0,86,2
                    87           ?SYMB   'GPT2.H',0,29,3
                    88           ?SYMB   '',0,86,3
                    89           ?SYMB   '',0,86,2
                    90           ?SYMB   'CCU62.H',0,29,3
                    91           ?SYMB   '',0,86,3
                    92           ?SYMB   '',0,86,2
                    93           ?SYMB   'CCU63.H',0,29,3
                    94           ?SYMB   '',0,86,3
                    95           ?SYMB   '',0,86,2
                    96           ?SYMB   'ADC0.H',0,29,3
                    97           ?SYMB   '',0,86,3
                    98           ?SYMB   'ubyte',3,13,259
                    99           ?SYMB   '',0,86,2
                   100           ?SYMB   '',0,86,1
                   101   ; ccu63.c    30 
                   102   ; ccu63.c    31 // USER CODE BEGIN (CCU63_General,2)
                   103   ; ccu63.c    32 
                   104   ; ccu63.c    33 // USER CODE END
                   105   ; ccu63.c    34 
                   106   ; ccu63.c    35 
                   107   ; ccu63.c    36 //****************************************************************************
                   108   ; ccu63.c    37 // @Macros
                   109   ; ccu63.c    38 //****************************************************************************
                   110   ; ccu63.c    39 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   3
ccu63

 LOC CODE        LINE   SOURCELINE

                   111   ; ccu63.c    40 // USER CODE BEGIN (CCU63_General,3)
                   112   ; ccu63.c    41 
                   113   ; ccu63.c    42 // USER CODE END
                   114   ; ccu63.c    43 
                   115   ; ccu63.c    44 
                   116   ; ccu63.c    45 //****************************************************************************
                   117   ; ccu63.c    46 // @Defines
                   118   ; ccu63.c    47 //****************************************************************************
                   119   ; ccu63.c    48 
                   120   ; ccu63.c    49 // USER CODE BEGIN (CCU63_General,4)
                   121   ; ccu63.c    50 
                   122   ; ccu63.c    51 // USER CODE END
                   123   ; ccu63.c    52 
                   124   ; ccu63.c    53 
                   125   ; ccu63.c    54 //****************************************************************************
                   126   ; ccu63.c    55 // @Typedefs
                   127   ; ccu63.c    56 //****************************************************************************
                   128   ; ccu63.c    57 
                   129   ; ccu63.c    58 // USER CODE BEGIN (CCU63_General,5)
                   130   ; ccu63.c    59 
                   131   ; ccu63.c    60 // USER CODE END
                   132   ; ccu63.c    61 
                   133   ; ccu63.c    62 
                   134   ; ccu63.c    63 //****************************************************************************
                   135   ; ccu63.c    64 // @Imported Global Variables
                   136   ; ccu63.c    65 //****************************************************************************
                   137   ; ccu63.c    66 
                   138   ; ccu63.c    67 // USER CODE BEGIN (CCU63_General,6)
                   139   ; ccu63.c    68         extern const unsigned int ARRAY_SIZE;
                   140   ; ccu63.c    69         extern unsigned int table[];
                   141   ; ccu63.c    70         extern  unsigned int index;
                   142   ; ccu63.c    71         extern unsigned int OFFSET_L1;
                   143   ; ccu63.c    72         extern unsigned int OFFSET_L2;
                   144   ; ccu63.c    73         extern unsigned int OFFSET_L3;
                   145   ; ccu63.c    74         extern const unsigned int frequency;
                   146   ; ccu63.c    75 // USER CODE END
                   147   ; ccu63.c    76 
                   148   ; ccu63.c    77 
                   149   ; ccu63.c    78 //****************************************************************************
                   150   ; ccu63.c    79 // @Global Variables
                   151   ; ccu63.c    80 //****************************************************************************
                   152   ; ccu63.c    81 
                   153   ; ccu63.c    82 // USER CODE BEGIN (CCU63_General,7)
                   154   ; ccu63.c    83 
                   155   ; ccu63.c    84 // USER CODE END
                   156   ; ccu63.c    85 
                   157   ; ccu63.c    86 
                   158   ; ccu63.c    87 //****************************************************************************
                   159   ; ccu63.c    88 // @External Prototypes
                   160   ; ccu63.c    89 //****************************************************************************
                   161   ; ccu63.c    90 
                   162   ; ccu63.c    91 // USER CODE BEGIN (CCU63_General,8)
                   163   ; ccu63.c    92 
                   164   ; ccu63.c    93 // USER CODE END
                   165   ; ccu63.c    94 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   4
ccu63

 LOC CODE        LINE   SOURCELINE

                   166   ; ccu63.c    95 
                   167   ; ccu63.c    96 //****************************************************************************
                   168   ; ccu63.c    97 // @Prototypes Of Local Functions
                   169   ; ccu63.c    98 //****************************************************************************
                   170   ; ccu63.c    99 
                   171   ; ccu63.c   100 // USER CODE BEGIN (CCU63_General,9)
                   172   ; ccu63.c   101 
                   173   ; ccu63.c   102 // USER CODE END
                   174   ; ccu63.c   103 
                   175   ; ccu63.c   104 
                   176   ; ccu63.c   105 //****************************************************************************
                   177   ; ccu63.c   106 // @Function      void CCU63_vInit(void) 
                   178   ; ccu63.c   107 //
                   179   ; ccu63.c   108 //----------------------------------------------------------------------------
                   180   ; ccu63.c   109 // @Description   This is the initialization function of the CCU63 function 
                   181   ; ccu63.c   110 //                library. It is assumed that the SFRs used by this library 
                   182   ; ccu63.c   111 //                are in reset state. 
                   183   ; ccu63.c   112 //
                   184   ; ccu63.c   113 //----------------------------------------------------------------------------
                   185   ; ccu63.c   114 // @Returnvalue   None
                   186   ; ccu63.c   115 //
                   187   ; ccu63.c   116 //----------------------------------------------------------------------------
                   188   ; ccu63.c   117 // @Parameters    None
                   189   ; ccu63.c   118 //
                   190   ; ccu63.c   119 //----------------------------------------------------------------------------
                   191   ; ccu63.c   120 // @Date          28.09.2021
                   192   ; ccu63.c   121 //
                   193   ; ccu63.c   122 //****************************************************************************
                   194   ; ccu63.c   123 
                   195   ; ccu63.c   124 // USER CODE BEGIN (Init,1)
                   196   ; ccu63.c   125 
                   197   ; ccu63.c   126 // USER CODE END
                   198   ; ccu63.c   127 
                   199   ; ccu63.c   128 void CCU63_vInit(void)
                   200   ; ccu63.c   129 {
                   201   CCU63_1_PR      SECTION CODE WORD PUBLIC 'CPROGRAM'
                   202           ?LINE   129
                   203           PUBLIC  _CCU63_vInit
               R   204           ?SYMB   'CCU63_vInit',_CCU63_vInit,37,1
                   205           ?SYMB   '',129,8,34
                   206           ?SYMB   'uword',18,13,261
                   207   _CCU63_vInit    PROC    FAR
                   208           ?SYMB   '',00H,95,0
                   209   ; Locals:
                   210   ; 
                   211   ; Statics:
                   212   ; 
                   213   ; CSEs:
                   214   ; 
                   215   ; ccu63.c   130   // USER CODE BEGIN (Init,2)
                   216   ; ccu63.c   131 
                   217   ; ccu63.c   132   // USER CODE END
                   218   ; ccu63.c   133 
                   219   ; ccu63.c   134   ///  -----------------------------------------------------------------------
                   220   ; ccu63.c   135   ///  Configuration of KERNEL REGISTERS :
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   5
ccu63

 LOC CODE        LINE   SOURCELINE

                   221   ; ccu63.c   136   ///  -----------------------------------------------------------------------
                   222   ; ccu63.c   137   ///  - CCU63 Module is enabled.
                   223   ; ccu63.c   138   ///  - The CCU63 module clock = 65,000 MHz. 
                   224   ; ccu63.c   139   ///  - T12 is enabled.
                   225   ; ccu63.c   140   ///  - T13 is enabled.
                   226   ; ccu63.c   141   ///  - MCM is enabled.
                   227   ; ccu63.c   142 
                   228   ; ccu63.c   143   CCU63_KSCFG    =  0x0003;      // Kernel State Configuration Register
                   229           ?LINE   143
0000 E03C          230           MOV     R12,#03h
0002 F6FC80EB      231           MOV     0EB80h,R12
                   232   ; ccu63.c   144 
                   233   ; ccu63.c   145 
                   234   ; ccu63.c   146   _nop();    //No operation function as Delay
                   235           ?LINE   146
0006 CC00          236           NOP
                   237   ; ccu63.c   147   _nop();    //No operation function as Delay
                   238           ?LINE   147
0008 CC00          239           NOP
                   240   ; ccu63.c   148   _nop();    //No operation function as Delay
                   241           ?LINE   148
000A CC00          242           NOP
                   243   ; ccu63.c   149   _nop();    //No operation function as Delay
                   244           ?LINE   149
000C CC00          245           NOP
                   246   ; ccu63.c   150 
                   247   ; ccu63.c   151   ///  -----------------------------------------------------------------------
                   248   ; ccu63.c   152   ///  Configuration of CCU63 Timer 12:
                   249   ; ccu63.c   153   ///  -----------------------------------------------------------------------
                   250   ; ccu63.c   154   ///  - Timer 12 Input clock factor (T12CLK) is 0
                   251   ; ccu63.c   155   ///  - prescaler factor is 0
                   252   ; ccu63.c   156   ///  - Timer 12 run bit is reset
                   253   ; ccu63.c   157   ///  - Single shot mode is disabled
                   254   ; ccu63.c   158   ///  - Timer 12 works in center aligned mode
                   255   ; ccu63.c   159   ///  - Interrupt on period match is enabled
                   256   ; ccu63.c   160   ///  - Interrupt on one match is enabled
                   257   ; ccu63.c   161   ///  - No External run selection is selected.
                   258   ; ccu63.c   162   ///  - Timer mode is selected.
                   259   ; ccu63.c   163   ///  - 
                   260   ; ccu63.c   164 
                   261   ; ccu63.c   165   CCU63_T12PR    =  0x070B;      // load CCU63 T12 period register
                   262           ?LINE   165
000E E6FC0B07      263           MOV     R12,#070Bh
0012 F6FC92EB      264           MOV     0EB92h,R12
                   265   ; ccu63.c   166 
                   266   ; ccu63.c   167   ///  -----------------------------------------------------------------------
                   267   ; ccu63.c   168   ///  Configuration of T13HR Signal:
                   268   ; ccu63.c   169   ///  -----------------------------------------------------------------------
                   269   ; ccu63.c   170   ///  - Signal T13HRA is selected as Input
                   270   ; ccu63.c   171 
                   271   ; ccu63.c   172   ///  -----------------------------------------------------------------------
                   272   ; ccu63.c   173   ///  Configuration of CCU63 Timer 13:
                   273   ; ccu63.c   174   ///  -----------------------------------------------------------------------
                   274   ; ccu63.c   175   ///  - Timer 13 Input Clock factor (T13CLK) is 0
                   275   ; ccu63.c   176   ///  - prescaler factor is 0
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   6
ccu63

 LOC CODE        LINE   SOURCELINE

                   276   ; ccu63.c   177   ///  - Timer 13 run bit is reset
                   277   ; ccu63.c   178   ///  - Trigger control is disabled
                   278   ; ccu63.c   179   ///  - No External run selection is selected.
                   279   ; ccu63.c   180   ///  - Timer mode is selected.
                   280   ; ccu63.c   181   ///  - 
                   281   ; ccu63.c   182   ///  - Single shot mode is disabled
                   282   ; ccu63.c   183   ///  - Interrupt on period match is disabled
                   283   ; ccu63.c   184   ///  - Interrupt on compare match is disabled
                   284   ; ccu63.c   185 
                   285   ; ccu63.c   186   CCU63_T13PR    =  0x0001;      // load CCU63 T13 period register
                   286           ?LINE   186
0016 E01C          287           MOV     R12,#01h
0018 F6FCB2EB      288           MOV     0EBB2h,R12
                   289   ; ccu63.c   187 
                   290   ; ccu63.c   188   CCU63_TCTR0    =  0x0080;      // load CCU63 timer control register 0
                   291           ?LINE   188
001C E6FC8000      292           MOV     R12,#080h
0020 F6FCACEB      293           MOV     0EBACh,R12
                   294   ; ccu63.c   189   CCU63_TCTR2    =  0x0020;      // load CCU63 timer control register 2
                   295           ?LINE   189
0024 E6FC2000      296           MOV     R12,#020h
0028 F6FCAEEB      297           MOV     0EBAEh,R12
                   298   ; ccu63.c   190 
                   299   ; ccu63.c   191   ///  -----------------------------------------------------------------------
                   300   ; ccu63.c   192   ///  Configuration of Multi Channel Mode:
                   301   ; ccu63.c   193   ///  -----------------------------------------------------------------------
                   302   ; ccu63.c   194   ///  - Multi channel mode is disabled
                   303   ; ccu63.c   195 
                   304   ; ccu63.c   196 
                   305   ; ccu63.c   197   ///  -----------------------------------------------------------------------
                   306   ; ccu63.c   198   ///  Configuration of CCU63 Channel 0:
                   307   ; ccu63.c   199   ///  -----------------------------------------------------------------------
                   308   ; ccu63.c   200   ///  - Compare mode 1 is selected
                   309   ; ccu63.c   201   ///  - T12 modulation for output CC60 is enabled
                   310   ; ccu63.c   202   ///  - T13 modulation for output CC60 is disabled
                   311   ; ccu63.c   203   ///  - The trap functionality of the pin CC60 is disabled
                   312   ; ccu63.c   204   ///  - The compare output CC60 drives passive level while CC60ST is '0'
                   313   ; ccu63.c   205   ///  - The passive level of the output CC60 is '0'
                   314   ; ccu63.c   206   ///  - T12 modulation for output COUT60 is enabled
                   315   ; ccu63.c   207   ///  - T13 modulation for output COUT60 is disabled
                   316   ; ccu63.c   208   ///  - The trap functionality of the pin COUT60 is disabled
                   317   ; ccu63.c   209   ///  - The compare output COUT60 drives passive level while CC60ST is '1'
                   318   ; ccu63.c   210   ///  - The passive level of the output COUT60 is '0'
                   319   ; ccu63.c   211   ///  - Dead time generation is enabled
                   320   ; ccu63.c   212 
                   321   ; ccu63.c   213   ///  - Generation interrupt on flag ICC60R is disabled
                   322   ; ccu63.c   214   ///  - Generation interrupt on flag ICC60F is disabled
                   323   ; ccu63.c   215 
                   324   ; ccu63.c   216   CCU63_CC60SR   =  0x070C;      // Load CCU63 capture/compare shadow 
                   325           ?LINE   216
002C E6FC0C07      326           MOV     R12,#070Ch
0030 F6FCA0EB      327           MOV     0EBA0h,R12
                   328   ; ccu63.c   217                                  // register for channel 0
                   329   ; ccu63.c   218 
                   330   ; ccu63.c   219   ///  -----------------------------------------------------------------------
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   7
ccu63

 LOC CODE        LINE   SOURCELINE

                   331   ; ccu63.c   220   ///  Configuration of CCU63 Channel 1:
                   332   ; ccu63.c   221   ///  -----------------------------------------------------------------------
                   333   ; ccu63.c   222   ///  - Compare mode 1 is selected
                   334   ; ccu63.c   223   ///  - T12 modulation for output CC61 is enabled
                   335   ; ccu63.c   224   ///  - T13 modulation for output CC61 is disabled
                   336   ; ccu63.c   225   ///  - The trap functionality of the pin CC61 is disabled
                   337   ; ccu63.c   226   ///  - The compare output CC61 drives passive level while CC61ST is '0'
                   338   ; ccu63.c   227   ///  - The passive level of the output CC61 is '0'
                   339   ; ccu63.c   228   ///  - T12 modulation for output COUT61 is enabled
                   340   ; ccu63.c   229   ///  - T13 modulation for output COUT61 is disabled
                   341   ; ccu63.c   230   ///  - The trap functionality of the pin COUT61 is disabled
                   342   ; ccu63.c   231   ///  - The compare output COUT61 drives passive level while CC61ST is '1'
                   343   ; ccu63.c   232   ///  - The passive level of the output COUT61 is '0'
                   344   ; ccu63.c   233   ///  - Dead time generation is enabled
                   345   ; ccu63.c   234 
                   346   ; ccu63.c   235   ///  - Generation interrupt on flag ICC61R is disabled
                   347   ; ccu63.c   236   ///  - Generation interrupt on flag ICC61F is disabled
                   348   ; ccu63.c   237 
                   349   ; ccu63.c   238   CCU63_CC61SR   =  0x070C;      // Load CCU63 capture/compare shadow 
                   350           ?LINE   238
0034 E6FC0C07      351           MOV     R12,#070Ch
0038 F6FCA2EB      352           MOV     0EBA2h,R12
                   353   ; ccu63.c   239                                  // register for channel 1
                   354   ; ccu63.c   240 
                   355   ; ccu63.c   241   ///  -----------------------------------------------------------------------
                   356   ; ccu63.c   242   ///  Configuration of CCU63 Channel 2:
                   357   ; ccu63.c   243   ///  -----------------------------------------------------------------------
                   358   ; ccu63.c   244   ///  - Compare mode 1 is selected
                   359   ; ccu63.c   245   ///  - T12 modulation for output CC62 is enabled
                   360   ; ccu63.c   246   ///  - T13 modulation for output CC62 is disabled
                   361   ; ccu63.c   247   ///  - The trap functionality of the pin CC62 is disabled
                   362   ; ccu63.c   248   ///  - The compare output CC62 drives passive level while CC62ST is '0'
                   363   ; ccu63.c   249   ///  - The passive level of the output CC62 is '0'
                   364   ; ccu63.c   250   ///  - T12 modulation for output COUT62 is enabled
                   365   ; ccu63.c   251   ///  - T13 modulation for output COUT62 is disabled
                   366   ; ccu63.c   252   ///  - The trap functionality of the pin COUT62 is disabled
                   367   ; ccu63.c   253   ///  - The compare output COUT62 drives passive level while CC62ST is '1'
                   368   ; ccu63.c   254   ///  - The passive level of the output COUT62 is '0'
                   369   ; ccu63.c   255   ///  - Dead time generation is enabled
                   370   ; ccu63.c   256 
                   371   ; ccu63.c   257   ///  - Generation interrupt on flag ICC62R is disabled
                   372   ; ccu63.c   258   ///  - Generation interrupt on flag ICC62F is disabled
                   373   ; ccu63.c   259 
                   374   ; ccu63.c   260   CCU63_CC62SR   =  0x070C;      // Load CCU63 capture/compare shadow 
                   375           ?LINE   260
003C E6FC0C07      376           MOV     R12,#070Ch
0040 F6FCA4EB      377           MOV     0EBA4h,R12
                   378   ; ccu63.c   261                                  // register for channel 2
                   379   ; ccu63.c   262 
                   380   ; ccu63.c   263   ///  -----------------------------------------------------------------------
                   381   ; ccu63.c   264   ///  Configuration of CCU63 Channel 3:
                   382   ; ccu63.c   265   ///  -----------------------------------------------------------------------
                   383   ; ccu63.c   266   ///  - T13 output is not inverted
                   384   ; ccu63.c   267 
                   385   ; ccu63.c   268 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   8
ccu63

 LOC CODE        LINE   SOURCELINE

                   386   ; ccu63.c   269   CCU63_CC63SR   =  0x0000;      // load CCU63 capture/compare shadow 
                   387           ?LINE   269
0044 E00C          388           MOV     R12,#00h
0046 F6FCB6EB      389           MOV     0EBB6h,R12
                   390   ; ccu63.c   270                                  // register for channel 3
                   391   ; ccu63.c   271 
                   392   ; ccu63.c   272 
                   393   ; ccu63.c   273   CCU63_T12DTC   =  0x0741;      // load CCU63 dead time control register for 
                   394           ?LINE   273
004A E6FC4107      395           MOV     R12,#0741h
004E F6FC94EB      396           MOV     0EB94h,R12
                   397   ; ccu63.c   274                                  // timer T12
                   398   ; ccu63.c   275 
                   399   ; ccu63.c   276   CCU63_T12MSEL  =  0x0111;      // load CCU63 T12 campture/compare mode 
                   400           ?LINE   276
0052 E6FC1101      401           MOV     R12,#0111h
0056 F6FCC6EB      402           MOV     0EBC6h,R12
                   403   ; ccu63.c   277                                  // select register
                   404   ; ccu63.c   278 
                   405   ; ccu63.c   279   CCU63_CMPSTAT  =  0x2A00;      // load CCU63 compare status register
                   406           ?LINE   279
005A E6FC002A      407           MOV     R12,#02A00h
005E F6FCA8EB      408           MOV     0EBA8h,R12
                   409   ; ccu63.c   280 
                   410   ; ccu63.c   281   CCU63_MODCTR   =  0x003F;      // load CCU63 modulation control register
                   411           ?LINE   281
0062 E6FC3F00      412           MOV     R12,#03Fh
0066 F6FCC0EB      413           MOV     0EBC0h,R12
                   414   ; ccu63.c   282 
                   415   ; ccu63.c   283   ///  -----------------------------------------------------------------------
                   416   ; ccu63.c   284   ///  Configuration of CCU63 trap control:
                   417   ; ccu63.c   285   ///  -----------------------------------------------------------------------
                   418   ; ccu63.c   286   ///  - Trap can only be generated by SW by setting the bit TRPF
                   419   ; ccu63.c   287   ///  - The trap state is left when a zero-match of T12 (while counting up) 
                   420   ; ccu63.c   288   ///    is detected (synchronization to T12)
                   421   ; ccu63.c   289   ///  - Bit TRPF is automatically cleared by HW (according to TRPPEN, TRPM0 
                   422   ; ccu63.c   290   ///    and TRPM1)
                   423   ; ccu63.c   291   ///  - Trap interrupt is disabled
                   424   ; ccu63.c   292 
                   425   ; ccu63.c   293 
                   426   ; ccu63.c   294   ///  -----------------------------------------------------------------------
                   427   ; ccu63.c   295   ///  Configuration of CCU63 interrupt control:
                   428   ; ccu63.c   296   ///  -----------------------------------------------------------------------
                   429   ; ccu63.c   297   ///  - For channel 0 interrupts is node I0 selected
                   430   ; ccu63.c   298   ///  - For channel 1 interrupts is node I0 selected
                   431   ; ccu63.c   299   ///  - For channel 2 interrupts is node I0 selected
                   432   ; ccu63.c   300   ///  - For correct hall event interrupt is node I0 selected
                   433   ; ccu63.c   301   ///  - For error interrupts is node I0 selected
                   434   ; ccu63.c   302   ///  - For T12 interrupts is node I0 selected
                   435   ; ccu63.c   303   ///  - For T13 interrupts is node I0 selected
                   436   ; ccu63.c   304 
                   437   ; ccu63.c   305 
                   438   ; ccu63.c   306   CCU63_INP      =  0x0000;      // Load CCU63 capture/compare interrupt node 
                   439           ?LINE   306
006A E00C          440           MOV     R12,#00h
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:   9
ccu63

 LOC CODE        LINE   SOURCELINE

006C F6FCD6EB      441           MOV     0EBD6h,R12
                   442   ; ccu63.c   307                                  // pointer register
                   443   ; ccu63.c   308 
                   444   ; ccu63.c   309   CCU63_IEN      =  0x00C0;      // Load CCU63 capture/compare interrupt 
                   445           ?LINE   309
0070 E6FCC000      446           MOV     R12,#0C0h
0074 F6FCD8EB      447           MOV     0EBD8h,R12
                   448   ; ccu63.c   310                                  // enable register
                   449   ; ccu63.c   311 
                   450   ; ccu63.c   312 
                   451   ; ccu63.c   313   ///  -----------------------------------------------------------------------
                   452   ; ccu63.c   314   ///  Configuration of the used CCU63 Channel Port Pins:
                   453   ; ccu63.c   315   ///  -----------------------------------------------------------------------
                   454   ; ccu63.c   316   ///  - P9.0 is used for CCU63 output(CC60)
                   455   ; ccu63.c   317   ///  - P9.1 is used for CCU63 output(CC61)
                   456   ; ccu63.c   318   ///  - P9.2 is used for CCU63 output(CC62)
                   457   ; ccu63.c   319   ///  - P9.3 is used for CCU63 output(COUT60)
                   458   ; ccu63.c   320   ///  - P9.4 is used for CCU63 output(COUT61)
                   459   ; ccu63.c   321   ///  - P9.5 is used for CCU63 output(COUT62)
                   460   ; ccu63.c   322 
                   461   ; ccu63.c   323   P9_IOCR00 = 0x0090;    //set direction register
                   462           ?LINE   323
0078 E6FC9000      463           MOV     R12,#090h
007C F6FC20E9      464           MOV     0E920h,R12
                   465   ; ccu63.c   324   P9_IOCR01 = 0x0090;    //set direction register
                   466           ?LINE   324
0080 E6FC9000      467           MOV     R12,#090h
0084 F6FC22E9      468           MOV     0E922h,R12
                   469   ; ccu63.c   325   P9_IOCR02 = 0x0090;    //set direction register
                   470           ?LINE   325
0088 E6FC9000      471           MOV     R12,#090h
008C F6FC24E9      472           MOV     0E924h,R12
                   473   ; ccu63.c   326   P9_IOCR03 = 0x0090;    //set direction register
                   474           ?LINE   326
0090 E6FC9000      475           MOV     R12,#090h
0094 F6FC26E9      476           MOV     0E926h,R12
                   477   ; ccu63.c   327   P9_IOCR04 = 0x0090;    //set direction register
                   478           ?LINE   327
0098 E6FC9000      479           MOV     R12,#090h
009C F6FC28E9      480           MOV     0E928h,R12
                   481   ; ccu63.c   328   P9_IOCR05 = 0x0090;    //set direction register
                   482           ?LINE   328
00A0 E6FC9000      483           MOV     R12,#090h
00A4 F6FC2AE9      484           MOV     0E92Ah,R12
                   485   ; ccu63.c   329 
                   486   ; ccu63.c   330   CCU63_PISELL   =  0x3FEA;      // Load CCU63 Port Input Selection register
                   487           ?LINE   330
00A8 E6FCEA3F      488           MOV     R12,#03FEAh
00AC F6FC84EB      489           MOV     0EB84h,R12
                   490   ; ccu63.c   331 
                   491   ; ccu63.c   332   ///  -----------------------------------------------------------------------
                   492   ; ccu63.c   333   ///  Configuration of the used CCU63 Channels Interrupts:
                   493   ; ccu63.c   334   ///  -----------------------------------------------------------------------
                   494   ; ccu63.c   335   ///  NodeI0 service request node configuration:
                   495   ; ccu63.c   336   ///  - NodeI0 interrupt priority level (ILVL) = 12
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:  10
ccu63

 LOC CODE        LINE   SOURCELINE

                   496   ; ccu63.c   337   ///  - NodeI0 interrupt group level (GLVL) = 0
                   497   ; ccu63.c   338   ///  - NodeI0 group priority extension (GPX) = 0
                   498   ; ccu63.c   339 
                   499   ; ccu63.c   340   CCU63_0IC      =  0x0070;     
                   500           ?LINE   340
00B0 E6FC7000      501           MOV     R12,#070h
00B4 F6FC78F1      502           MOV     0F178h,R12
                   503   ; ccu63.c   341 
                   504   ; ccu63.c   342 
                   505   ; ccu63.c   343   ///  -----------------------------------------------------------------------
                   506   ; ccu63.c   344   ///  Configuration of T12, T13 ---- CCU63_TCTR4 Register:
                   507   ; ccu63.c   345   ///  -----------------------------------------------------------------------
                   508   ; ccu63.c   346   ///  - Enable shadow transfer of T12 and T13
                   509   ; ccu63.c   347   ///  - Timer 12 run bit is reset
                   510   ; ccu63.c   348   ///  - Timer 13 run bit is reset
                   511   ; ccu63.c   349   CCU63_TCTR4    =  0x4040;      // load CCU63 timer control register 4
                   512           ?LINE   349
00B8 E6FC4040      513           MOV     R12,#04040h
00BC F6FCA6EB      514           MOV     0EBA6h,R12
                   515   ; ccu63.c   350 
                   516   ; ccu63.c   351 
                   517   ; ccu63.c   352   // USER CODE BEGIN (NodeI3,3)
                   518   ; ccu63.c   353 
                   519   ; ccu63.c   354   // USER CODE END
                   520   ; ccu63.c   355 
                   521   ; ccu63.c   356 } //  End of function CCU63_vInit
                   522           ?LINE   356
00C0 DB00          523           RETS
                   524   _CCU63_vInit    ENDP
               R   525           ?SYMB   '',$,17,356
                   526   ; ccu63.c   357 
                   527   ; ccu63.c   358 
                   528   ; ccu63.c   359 //****************************************************************************
                   529   ; ccu63.c   360 // @Function      void CCU63_viNodeI0(void) 
                   530   ; ccu63.c   361 //
                   531   ; ccu63.c   362 //----------------------------------------------------------------------------
                   532   ; ccu63.c   363 // @Description   This is the interrupt service routine for the CCU63 node 
                   533   ; ccu63.c   364 //                I0. If the content of the corresponding compare timer 
                   534   ; ccu63.c   365 //                (configurable) equals the content of the capture/compare 
                   535   ; ccu63.c   366 //                register or if a capture event occurs at the associated 
                   536   ; ccu63.c   367 //                port pin, the interrupt request flag is set and an 
                   537   ; ccu63.c   368 //                interrupt is triggered (only if enabled).
                   538   ; ccu63.c   369 //                Please note that you have to add application specific code 
                   539   ; ccu63.c   370 //                to this function.
                   540   ; ccu63.c   371 //
                   541   ; ccu63.c   372 //----------------------------------------------------------------------------
                   542   ; ccu63.c   373 // @Returnvalue   None
                   543   ; ccu63.c   374 //
                   544   ; ccu63.c   375 //----------------------------------------------------------------------------
                   545   ; ccu63.c   376 // @Parameters    None
                   546   ; ccu63.c   377 //
                   547   ; ccu63.c   378 //----------------------------------------------------------------------------
                   548   ; ccu63.c   379 // @Date          28.09.2021
                   549   ; ccu63.c   380 //
                   550   ; ccu63.c   381 //****************************************************************************
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:  11
ccu63

 LOC CODE        LINE   SOURCELINE

                   551   ; ccu63.c   382 
                   552   ; ccu63.c   383 // USER CODE BEGIN (NodeI0,1)
                   553   ; ccu63.c   384 
                   554   ; ccu63.c   385 // USER CODE END
                   555   ; ccu63.c   386 
                   556   ; ccu63.c   387 _interrupt(CCU63_NodeI0_INT)  void CCU63_viNodeI0(void)
                   557   ; ccu63.c   388 {
               R   558           ?SYMB   'CCU63_viNodeI0',_CCU63_viNodeI0,37,1
                   559           ?SYMB   '',388,8,16
                   560   _CCU63_viNodeI0 PROC TASK CCU63_TASK INTNO CCU63_INUM = 03Ch
                   561           ?LINE   388
                   562           ?SYMB   '',00H,95,0
00C2 F6F00000  R   563           MOV     CCU63_RB,R0
00C6 C6080000  R   564           SCXT    CP,#CCU63_RB
00CA C6871000      565           SCXT    MDC,#010h
00CE EC00          566           PUSH    DPP0
00D0 E6000000  R   567           MOV     DPP0,#PAG ?BASE_DPP0
00D4 CC00          568           NOP
00D6 EC02          569           PUSH    DPP2
00D8 E6020000  R   570           MOV     DPP2,#PAG ?BASE_DPP2
00DC CC00          571           NOP
00DE EC06          572           PUSH    MDH
00E0 EC07          573           PUSH    MDL
00E2 ECEF          574           PUSH    MSW
00E4 EC2E          575           PUSH    MAL
00E6 EC2F          576           PUSH    MAH
00E8 ECEE          577           PUSH    MCW
00EA C6ED0000      578           SCXT    MRW,#00h
00EE EC84          579           PUSH    IDX0
00F0 EC85          580           PUSH    IDX1
00F2 D180          581           EXTR    #01h
00F4 EC00     1    582           PUSH    QX0
00F6 D180          583           EXTR    #01h
00F8 EC01     1    584           PUSH    QX1
00FA D180          585           EXTR    #01h
00FC EC02     1    586           PUSH    QR0
00FE D180          587           EXTR    #01h
0100 EC03     1    588           PUSH    QR1
                   589   ; Locals:
                   590   ; 
                   591   ; Statics:
                   592   ; 
                   593   ; CSEs:
                   594   ; 
                   595   ; ccu63.c   389   // USER CODE BEGIN (NodeI0,2)
                   596   ; ccu63.c   390 
                   597   ; ccu63.c   391   // USER CODE END
                   598   ; ccu63.c   392 
                   599   ; ccu63.c   393   if(CCU63_IS & 0x0040)  // if CCU63_IS_T12OM
                   600           ?LINE   393
0102 F2FCD0EB      601           MOV     R12,0EBD0h
0106 8AFC0260      602           JB      R12.6,_9
010A EA003602  R   603           JMPA+   cc_UC,_7
010E               604   _9:
                   605   ; ccu63.c   394   {
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:  12
ccu63

 LOC CODE        LINE   SOURCELINE

                   606   ; ccu63.c   395     // Timer T12 one match detection
                   607   ; ccu63.c   396 
                   608   ; ccu63.c   397     // USER CODE BEGIN (NodeI0,20)
                   609   ; ccu63.c   398                 CCU63_vLoadChannelShadowRegister(CCU63_CHANNEL_0, table[(index 
                         + OFFSET_L1)%ARRAY_SIZE]*(0.014*frequency+0.3));
                   610           ?LINE   398
010E F2FC0000  R   611           MOV     R12,_index
0112 02FC0000  R   612           ADD     R12,_OFFSET_L1
0116 F2FD0000  R   613           MOV     R13,_ARRAY_SIZE
011A F6FC0EFE      614           MOV     MDL,R12
011E 5BDD          615           DIVU    R13
0120 F2FC0CFE      616           MOV     R12,MDH
0124 5C1C          617           SHL     R12,#01h
0126 D4BC0000  R   618           MOV     R11,[R12+#_table]
012A F04B          619           MOV     R4,R11
012C DA000000  R   620           CALLS   SEG __cuf28r,__cuf28r
               R   621           ?SYMB   '',$,96,8
0130 F0BA          622           MOV     R11,R10
0132 F2F40000  R   623           MOV     R4,_frequency
0136 DA000000  R   624           CALLS   SEG __cuf28r,__cuf28r
               R   625           ?SYMB   '',$,96,16
013A F0CB          626           MOV     R12,R11
013C F0BA          627           MOV     R11,R10
013E E6F40000  R   628           MOV     R4,#_3
0142 DA000000  R   629           CALLS   SEG __load8n,__load8n
               R   630           ?SYMB   '',$,96,24
0146 DA000000  R   631           CALLS   SEG __mlf8r,__mlf8r
014A F0BA          632           MOV     R11,R10
014C E6F40000  R   633           MOV     R4,#_4
0150 DA000000  R   634           CALLS   SEG __load8n,__load8n
               R   635           ?SYMB   '',$,96,32
0154 DA000000  R   636           CALLS   SEG __adf8r,__adf8r
0158 F0BC          637           MOV     R11,R12
015A DA000000  R   638           CALLS   SEG __mlf8r,__mlf8r
015E DA000000  R   639           CALLS   SEG __cfu82r,__cfu82r
0162 06F02000      640           ADD     R0,#020h
               R   641           ?SYMB   '',$,96,0
0166 F6F4A0EB      642           MOV     0EBA0h,R4
                   643   ; ccu63.c   399                 CCU63_vLoadChannelShadowRegister(CCU63_CHANNEL_1, table[(index 
                         + OFFSET_L2)%ARRAY_SIZE]*(0.014*frequency+0.3));
                   644           ?LINE   399
016A F2FC0000  R   645           MOV     R12,_index
016E 02FC0000  R   646           ADD     R12,_OFFSET_L2
0172 F2FD0000  R   647           MOV     R13,_ARRAY_SIZE
0176 F6FC0EFE      648           MOV     MDL,R12
017A 5BDD          649           DIVU    R13
017C F2FC0CFE      650           MOV     R12,MDH
0180 5C1C          651           SHL     R12,#01h
0182 D4BC0000  R   652           MOV     R11,[R12+#_table]
0186 F04B          653           MOV     R4,R11
0188 DA000000  R   654           CALLS   SEG __cuf28r,__cuf28r
               R   655           ?SYMB   '',$,96,8
018C F0BA          656           MOV     R11,R10
018E F2F40000  R   657           MOV     R4,_frequency
0192 DA000000  R   658           CALLS   SEG __cuf28r,__cuf28r
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:  13
ccu63

 LOC CODE        LINE   SOURCELINE

               R   659           ?SYMB   '',$,96,16
0196 F0CB          660           MOV     R12,R11
0198 F0BA          661           MOV     R11,R10
019A E6F40000  R   662           MOV     R4,#_3
019E DA000000  R   663           CALLS   SEG __load8n,__load8n
               R   664           ?SYMB   '',$,96,24
01A2 DA000000  R   665           CALLS   SEG __mlf8r,__mlf8r
01A6 F0BA          666           MOV     R11,R10
01A8 E6F40000  R   667           MOV     R4,#_4
01AC DA000000  R   668           CALLS   SEG __load8n,__load8n
               R   669           ?SYMB   '',$,96,32
01B0 DA000000  R   670           CALLS   SEG __adf8r,__adf8r
01B4 F0BC          671           MOV     R11,R12
01B6 DA000000  R   672           CALLS   SEG __mlf8r,__mlf8r
01BA DA000000  R   673           CALLS   SEG __cfu82r,__cfu82r
01BE 06F02000      674           ADD     R0,#020h
               R   675           ?SYMB   '',$,96,0
01C2 F6F4A2EB      676           MOV     0EBA2h,R4
                   677   ; ccu63.c   400                 CCU63_vLoadChannelShadowRegister(CCU63_CHANNEL_2, table[(index 
                         + OFFSET_L3)%ARRAY_SIZE]*(0.014*frequency+0.3));
                   678           ?LINE   400
01C6 F2FC0000  R   679           MOV     R12,_index
01CA 02FC0000  R   680           ADD     R12,_OFFSET_L3
01CE F2FD0000  R   681           MOV     R13,_ARRAY_SIZE
01D2 F6FC0EFE      682           MOV     MDL,R12
01D6 5BDD          683           DIVU    R13
01D8 F2FC0CFE      684           MOV     R12,MDH
01DC 5C1C          685           SHL     R12,#01h
01DE D4BC0000  R   686           MOV     R11,[R12+#_table]
01E2 F04B          687           MOV     R4,R11
01E4 DA000000  R   688           CALLS   SEG __cuf28r,__cuf28r
               R   689           ?SYMB   '',$,96,8
01E8 F0BA          690           MOV     R11,R10
01EA F2F40000  R   691           MOV     R4,_frequency
01EE DA000000  R   692           CALLS   SEG __cuf28r,__cuf28r
               R   693           ?SYMB   '',$,96,16
01F2 F0CB          694           MOV     R12,R11
01F4 F0BA          695           MOV     R11,R10
01F6 E6F40000  R   696           MOV     R4,#_3
01FA DA000000  R   697           CALLS   SEG __load8n,__load8n
               R   698           ?SYMB   '',$,96,24
01FE DA000000  R   699           CALLS   SEG __mlf8r,__mlf8r
0202 F0BA          700           MOV     R11,R10
0204 E6F40000  R   701           MOV     R4,#_4
0208 DA000000  R   702           CALLS   SEG __load8n,__load8n
               R   703           ?SYMB   '',$,96,32
020C DA000000  R   704           CALLS   SEG __adf8r,__adf8r
0210 F0BC          705           MOV     R11,R12
0212 DA000000  R   706           CALLS   SEG __mlf8r,__mlf8r
0216 DA000000  R   707           CALLS   SEG __cfu82r,__cfu82r
021A 06F02000      708           ADD     R0,#020h
               R   709           ?SYMB   '',$,96,0
021E F6F4A4EB      710           MOV     0EBA4h,R4
                   711   ; ccu63.c   401                 CCU63_vEnableShadowTransfer(CCU63_TIMER_12);
                   712           ?LINE   401
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:  14
ccu63

 LOC CODE        LINE   SOURCELINE

0222 E6FCA6EB      713           MOV     R12,#0EBA6h
0226 A8DC          714           MOV     R13,[R12]
0228 6FFD          715           BSET    R13.6
022A B8DC          716           MOV     [R12],R13
                   717   ; ccu63.c   402     // USER CODE END
                   718   ; ccu63.c   403 
                   719   ; ccu63.c   404     CCU63_ISR |= 0x0040;  // clear flag CCU63_IS_T12OM
                   720           ?LINE   404
022C E6FCD4EB      721           MOV     R12,#0EBD4h
0230 A8DC          722           MOV     R13,[R12]
0232 6FFD          723           BSET    R13.6
0234 B8DC          724           MOV     [R12],R13
                   725   ; ccu63.c   405   }
                   726           ?LINE   405
0236               727   _7:
                   728   ; ccu63.c   406 
                   729   ; ccu63.c   407   if(CCU63_IS & 0x0080)  // if CCU63_IS_T12PM
                   730           ?LINE   407
0236 F2FCD0EB      731           MOV     R12,0EBD0h
023A 9AFC0570      732           JNB     R12.7,_8
                   733   ; ccu63.c   408   {
                   734   ; ccu63.c   409     // Timer T12 period match detection
                   735   ; ccu63.c   410 
                   736   ; ccu63.c   411     // USER CODE BEGIN (NodeI0,19)
                   737   ; ccu63.c   412     // USER CODE END
                   738   ; ccu63.c   413 
                   739   ; ccu63.c   414     CCU63_ISR |= 0x0080;  // clear flag CCU63_IS_T12PM
                   740           ?LINE   414
023E E6FCD4EB      741           MOV     R12,#0EBD4h
0242 A8DC          742           MOV     R13,[R12]
0244 7FFD          743           BSET    R13.7
0246 B8DC          744           MOV     [R12],R13
                   745   ; ccu63.c   415   }
                   746           ?LINE   415
0248               747   _8:
                   748   ; ccu63.c   416 
                   749   ; ccu63.c   417 
                   750   ; ccu63.c   418 } //  End of function CCU63_viNodeI0
                   751           ?LINE   418
0248 D180          752           EXTR    #01h
024A FC03     1    753           POP     QR1
024C D180          754           EXTR    #01h
024E FC02     1    755           POP     QR0
0250 D180          756           EXTR    #01h
0252 FC01     1    757           POP     QX1
0254 D180          758           EXTR    #01h
0256 FC00     1    759           POP     QX0
0258 FC85          760           POP     IDX1
025A FC84          761           POP     IDX0
025C FCED          762           POP     MRW
025E FCEE          763           POP     MCW
0260 FC2F          764           POP     MAH
0262 FC2E          765           POP     MAL
0264 FCEF          766           POP     MSW
0266 FC07          767           POP     MDL
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 28 2021  Time: 15:42:18  Page:  15
ccu63

 LOC CODE        LINE   SOURCELINE

0268 FC06          768           POP     MDH
026A FC02          769           POP     DPP2
026C FC00          770           POP     DPP0
026E FC87          771           POP     MDC
0270 FC08          772           POP     CP
                   773           ?LINE   418
0272 FB88          774           RETI
                   775   _CCU63_viNodeI0 ENDP
               R   776           ?SYMB   '',$,17,418
                   777   ; ccu63.c   419 
                   778   ; ccu63.c   420 
                   779   ; ccu63.c   421 
                   780   ; ccu63.c   422 
                   781   ; ccu63.c   423 // USER CODE BEGIN (CCU63_General,10)
                   782   ; ccu63.c   424 
                   783   ; ccu63.c   425 // USER CODE END
                   784   ; ccu63.c   426 
                   785   CCU63_1_PR      ENDS
                   786   
                   787   CCU63_2_CO      SECTION LDAT WORD PUBLIC 'CROM'
0000               788   _4      LABEL   WORD
0000 D33F3333      789           DW      03FD3h,03333h,03333h,03333h
0004 33333333    
0008               790   _3      LABEL   WORD
0008 8C3F08AC      791           DW      03F8Ch,0AC08h,03126h,0E979h
000C 263179E9    
                   792   CCU63_2_CO      ENDS
                   793   
                   794   C166_US SECTION LDAT WORD GLBUSRSTACK 'CUSTACK'
0000               795           DS      32
                   796   C166_US ENDS
                   797   
                   798   $FLOAT(ANSI)
                   799           EXTERN  _frequency:WORD
                   800           EXTERN  _table:WORD
                   801           ?SYMB   '',012H,5,263
                   802           EXTERN  _ARRAY_SIZE:WORD
                   803           EXTERN  _index:WORD
                   804           EXTERN  _OFFSET_L1:WORD
                   805           EXTERN  _OFFSET_L3:WORD
                   806           EXTERN  _OFFSET_L2:WORD
                   807           EXTERN  __cuf28r:FAR
                   808           EXTERN  __load8n:FAR
                   809           EXTERN  __mlf8r:FAR
                   810           EXTERN  __adf8r:FAR
                   811           EXTERN  __cfu82r:FAR
                   812   CCU63_RB        REGDEF  R0-R15
                   813           END

total errors: 0, warnings: 0

