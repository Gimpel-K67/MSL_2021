TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   1
ccu63

 LOC CODE        LINE   SOURCELINE

                     1   ; TASKING C166/ST10 C compiler v8.7r1 Build 775
                     2   ; options: -e -Id:\programme\tasking\c166 v8.7r1\include -x2 -Bhoeufmknladij -OB
                     3   ;          -OE -zswitch_tabmem_default -zautobitastruct-4 -zautobita-0 -FSC -A1
                     4   ;          -zvolatile_union -O0 -g -newerr -s -i0 -Ms
                     5   $DEBUG
                     6   $NOLOCALS
                     7   $EXTEND2
                     8   $NOMOD166
                     9   $STDNAMES(regsuper10bo.def)
                    10   $EXTMAC
                    11   $CASE
                    12   $NOEXPANDREGBANK
                    13   $MODEL(SMALL)
                    14           NAME    CCU63_C
                    15           ?SYMB   'ccu63.c',32,80,16
                    16           ?SYMB   '',1,82,0
                    17           ?SYMB   '80166',0,84,0
                    18           ?SYMB   '',0,81,0
                    19           ?SYMB   'void',00H,45,1
                    20           ?SYMB   'char',080000H,45,2
                    21           ?SYMB   'unsigned char',080000H,45,3
                    22           ?SYMB   'short',0100000H,45,4
                    23           ?SYMB   'unsigned short',0100000H,45,5
                    24           ?SYMB   'long',0200000H,45,6
                    25           ?SYMB   'unsigned long',0200000H,45,7
                    26           ?SYMB   'float',0200000H,45,10
                    27           ?SYMB   'double',0400000H,45,11
                    28           ?SYMB   'int',0100000H,45,16
                    29           ?SYMB   'unsigned int',0100000H,45,18
                    30           ?SYMB   'bit',010000H,7,256
                    31           ?SYMB   'ccu63.c',0,29,1
                    32           ?SYMB   '',0,86,1
                    33   ; ccu63.c     1 //****************************************************************************
                    34   ; ccu63.c     2 // @Module        Capture / Compare Unit 63 (CCU63)
                    35   ; ccu63.c     3 // @Filename      CCU63.C
                    36   ; ccu63.c     4 // @Project       DAvE_config.dav
                    37   ; ccu63.c     5 //----------------------------------------------------------------------------
                    38   ; ccu63.c     6 // @Controller    Infineon XE167F-96F66
                    39   ; ccu63.c     7 //
                    40   ; ccu63.c     8 // @Compiler      Tasking Classic
                    41   ; ccu63.c     9 //
                    42   ; ccu63.c    10 // @Codegenerator 2.2
                    43   ; ccu63.c    11 //
                    44   ; ccu63.c    12 // @Description   This file contains functions that use the CCU63 module.
                    45   ; ccu63.c    13 //
                    46   ; ccu63.c    14 //----------------------------------------------------------------------------
                    47   ; ccu63.c    15 // @Date          22.09.2021 17:20:13
                    48   ; ccu63.c    16 //
                    49   ; ccu63.c    17 //****************************************************************************
                    50   ; ccu63.c    18 
                    51   ; ccu63.c    19 // USER CODE BEGIN (CCU63_General,1)
                    52   ; ccu63.c    20 
                    53   ; ccu63.c    21 // USER CODE END
                    54   ; ccu63.c    22 
                    55   ; ccu63.c    23 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   2
ccu63

 LOC CODE        LINE   SOURCELINE

                    56   ; ccu63.c    24 
                    57   ; ccu63.c    25 //****************************************************************************
                    58   ; ccu63.c    26 // @Project Includes
                    59   ; ccu63.c    27 //****************************************************************************
                    60   ; ccu63.c    28 
                    61   ; ccu63.c    29 #include "MAIN.H"
                    62           ?SYMB   'MAIN.H',0,29,2
                    63           ?SYMB   '',0,86,2
                    64           ?SYMB   'XE16xREGS.H',0,29,3
                    65           ?SYMB   '',0,86,3
                    66           ?SYMB   '',0,86,2
                    67           ?SYMB   'SCS.H',0,29,3
                    68           ?SYMB   '',0,86,3
                    69           ?SYMB   'T$2',0,14,257
                    70           ?SYMB   'SCS_EXTCLK_F_SYS',0,33,257
                    71           ?SYMB   'SCS_EXTCLK_F_OUT',1,33,257
                    72           ?SYMB   'SCS_EXTCLK_F_PLL',2,33,257
                    73           ?SYMB   'SCS_EXTCLK_F_OSC',3,33,257
                    74           ?SYMB   'SCS_EXTCLK_F_WU',4,33,257
                    75           ?SYMB   'SCS_EXTCLK_F_TCK',5,33,257
                    76           ?SYMB   'SCS_EXTCLK_F_OSC_FL',6,33,257
                    77           ?SYMB   'SCS_EXTCLK_F_RTC',8,33,257
                    78           ?SYMB   '',16,16,0
                    79           ?SYMB   'SCS_EXTCLK_Type',257,13,258
                    80           ?SYMB   '',0,86,2
                    81           ?SYMB   'IO.H',0,29,3
                    82           ?SYMB   '',0,86,3
                    83           ?SYMB   '',0,86,2
                    84           ?SYMB   'CCU63.H',0,29,3
                    85           ?SYMB   '',0,86,3
                    86           ?SYMB   '',0,86,2
                    87           ?SYMB   '',0,86,1
                    88   ; ccu63.c    30 
                    89   ; ccu63.c    31 // USER CODE BEGIN (CCU63_General,2)
                    90   ; ccu63.c    32 
                    91   ; ccu63.c    33 // USER CODE END
                    92   ; ccu63.c    34 
                    93   ; ccu63.c    35 
                    94   ; ccu63.c    36 //****************************************************************************
                    95   ; ccu63.c    37 // @Macros
                    96   ; ccu63.c    38 //****************************************************************************
                    97   ; ccu63.c    39 
                    98   ; ccu63.c    40 // USER CODE BEGIN (CCU63_General,3)
                    99   ; ccu63.c    41 
                   100   ; ccu63.c    42 // USER CODE END
                   101   ; ccu63.c    43 
                   102   ; ccu63.c    44 
                   103   ; ccu63.c    45 //****************************************************************************
                   104   ; ccu63.c    46 // @Defines
                   105   ; ccu63.c    47 //****************************************************************************
                   106   ; ccu63.c    48 
                   107   ; ccu63.c    49 // USER CODE BEGIN (CCU63_General,4)
                   108   ; ccu63.c    50 
                   109   ; ccu63.c    51 // USER CODE END
                   110   ; ccu63.c    52 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   3
ccu63

 LOC CODE        LINE   SOURCELINE

                   111   ; ccu63.c    53 
                   112   ; ccu63.c    54 //****************************************************************************
                   113   ; ccu63.c    55 // @Typedefs
                   114   ; ccu63.c    56 //****************************************************************************
                   115   ; ccu63.c    57 
                   116   ; ccu63.c    58 // USER CODE BEGIN (CCU63_General,5)
                   117   ; ccu63.c    59 
                   118   ; ccu63.c    60 // USER CODE END
                   119   ; ccu63.c    61 
                   120   ; ccu63.c    62 
                   121   ; ccu63.c    63 //****************************************************************************
                   122   ; ccu63.c    64 // @Imported Global Variables
                   123   ; ccu63.c    65 //****************************************************************************
                   124   ; ccu63.c    66 
                   125   ; ccu63.c    67 // USER CODE BEGIN (CCU63_General,6)
                   126   ; ccu63.c    68 
                   127   ; ccu63.c    69 // USER CODE END
                   128   ; ccu63.c    70 
                   129   ; ccu63.c    71 
                   130   ; ccu63.c    72 //****************************************************************************
                   131   ; ccu63.c    73 // @Global Variables
                   132   ; ccu63.c    74 //****************************************************************************
                   133   ; ccu63.c    75 
                   134   ; ccu63.c    76 // USER CODE BEGIN (CCU63_General,7)
                   135   ; ccu63.c    77 
                   136   ; ccu63.c    78 // USER CODE END
                   137   ; ccu63.c    79 
                   138   ; ccu63.c    80 
                   139   ; ccu63.c    81 //****************************************************************************
                   140   ; ccu63.c    82 // @External Prototypes
                   141   ; ccu63.c    83 //****************************************************************************
                   142   ; ccu63.c    84 
                   143   ; ccu63.c    85 // USER CODE BEGIN (CCU63_General,8)
                   144   ; ccu63.c    86 
                   145   ; ccu63.c    87 // USER CODE END
                   146   ; ccu63.c    88 
                   147   ; ccu63.c    89 
                   148   ; ccu63.c    90 //****************************************************************************
                   149   ; ccu63.c    91 // @Prototypes Of Local Functions
                   150   ; ccu63.c    92 //****************************************************************************
                   151   ; ccu63.c    93 
                   152   ; ccu63.c    94 // USER CODE BEGIN (CCU63_General,9)
                   153   ; ccu63.c    95 
                   154   ; ccu63.c    96 // USER CODE END
                   155   ; ccu63.c    97 
                   156   ; ccu63.c    98 
                   157   ; ccu63.c    99 //****************************************************************************
                   158   ; ccu63.c   100 // @Function      void CCU63_vInit(void) 
                   159   ; ccu63.c   101 //
                   160   ; ccu63.c   102 //----------------------------------------------------------------------------
                   161   ; ccu63.c   103 // @Description   This is the initialization function of the CCU63 function 
                   162   ; ccu63.c   104 //                library. It is assumed that the SFRs used by this library 
                   163   ; ccu63.c   105 //                are in reset state. 
                   164   ; ccu63.c   106 //
                   165   ; ccu63.c   107 //----------------------------------------------------------------------------
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   4
ccu63

 LOC CODE        LINE   SOURCELINE

                   166   ; ccu63.c   108 // @Returnvalue   None
                   167   ; ccu63.c   109 //
                   168   ; ccu63.c   110 //----------------------------------------------------------------------------
                   169   ; ccu63.c   111 // @Parameters    None
                   170   ; ccu63.c   112 //
                   171   ; ccu63.c   113 //----------------------------------------------------------------------------
                   172   ; ccu63.c   114 // @Date          22.09.2021
                   173   ; ccu63.c   115 //
                   174   ; ccu63.c   116 //****************************************************************************
                   175   ; ccu63.c   117 
                   176   ; ccu63.c   118 // USER CODE BEGIN (Init,1)
                   177   ; ccu63.c   119 
                   178   ; ccu63.c   120 // USER CODE END
                   179   ; ccu63.c   121 
                   180   ; ccu63.c   122 void CCU63_vInit(void)
                   181   ; ccu63.c   123 {
                   182   CCU63_1_PR      SECTION CODE WORD PUBLIC 'CPROGRAM'
                   183           ?LINE   123
                   184           PUBLIC  _CCU63_vInit
               R   185           ?SYMB   'CCU63_vInit',_CCU63_vInit,37,1
                   186           ?SYMB   '',123,8,34
                   187           ?SYMB   'uword',18,13,260
                   188   _CCU63_vInit    PROC    FAR
                   189           ?SYMB   '',00H,95,0
                   190   ; Locals:
                   191   ; 
                   192   ; Statics:
                   193   ; 
                   194   ; CSEs:
                   195   ; 
                   196   ; ccu63.c   124   // USER CODE BEGIN (Init,2)
                   197   ; ccu63.c   125 
                   198   ; ccu63.c   126   // USER CODE END
                   199   ; ccu63.c   127 
                   200   ; ccu63.c   128   ///  -----------------------------------------------------------------------
                   201   ; ccu63.c   129   ///  Configuration of KERNEL REGISTERS :
                   202   ; ccu63.c   130   ///  -----------------------------------------------------------------------
                   203   ; ccu63.c   131   ///  - CCU63 Module is enabled.
                   204   ; ccu63.c   132   ///  - The CCU63 module clock = 65,000 MHz. 
                   205   ; ccu63.c   133   ///  - T12 is enabled.
                   206   ; ccu63.c   134   ///  - T13 is enabled.
                   207   ; ccu63.c   135   ///  - MCM is enabled.
                   208   ; ccu63.c   136 
                   209   ; ccu63.c   137   CCU63_KSCFG    =  0x0003;      // Kernel State Configuration Register
                   210           ?LINE   137
0000 E03C          211           MOV     R12,#03h
0002 F6FC80EB      212           MOV     0EB80h,R12
                   213   ; ccu63.c   138 
                   214   ; ccu63.c   139 
                   215   ; ccu63.c   140   _nop();    //No operation function as Delay
                   216           ?LINE   140
0006 CC00          217           NOP
                   218   ; ccu63.c   141   _nop();    //No operation function as Delay
                   219           ?LINE   141
0008 CC00          220           NOP
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   5
ccu63

 LOC CODE        LINE   SOURCELINE

                   221   ; ccu63.c   142   _nop();    //No operation function as Delay
                   222           ?LINE   142
000A CC00          223           NOP
                   224   ; ccu63.c   143   _nop();    //No operation function as Delay
                   225           ?LINE   143
000C CC00          226           NOP
                   227   ; ccu63.c   144 
                   228   ; ccu63.c   145   ///  -----------------------------------------------------------------------
                   229   ; ccu63.c   146   ///  Configuration of CCU63 Timer 12:
                   230   ; ccu63.c   147   ///  -----------------------------------------------------------------------
                   231   ; ccu63.c   148   ///  - Timer 12 Input clock factor (T12CLK) is 0
                   232   ; ccu63.c   149   ///  - prescaler factor is 0
                   233   ; ccu63.c   150   ///  - Timer 12 run bit is set
                   234   ; ccu63.c   151   ///  - Single shot mode is disabled
                   235   ; ccu63.c   152   ///  - Timer 12 works in center aligned mode
                   236   ; ccu63.c   153   ///  - Interrupt on period match is disabled
                   237   ; ccu63.c   154   ///  - Interrupt on one match is enabled
                   238   ; ccu63.c   155   ///  - No External run selection is selected.
                   239   ; ccu63.c   156   ///  - Timer mode is selected.
                   240   ; ccu63.c   157   ///  - 
                   241   ; ccu63.c   158 
                   242   ; ccu63.c   159   CCU63_T12PR    =  0x0FDE;      // load CCU63 T12 period register
                   243           ?LINE   159
000E E6FCDE0F      244           MOV     R12,#0FDEh
0012 F6FC92EB      245           MOV     0EB92h,R12
                   246   ; ccu63.c   160 
                   247   ; ccu63.c   161   ///  -----------------------------------------------------------------------
                   248   ; ccu63.c   162   ///  Configuration of T13HR Signal:
                   249   ; ccu63.c   163   ///  -----------------------------------------------------------------------
                   250   ; ccu63.c   164   ///  - Signal T13HRA is selected as Input
                   251   ; ccu63.c   165 
                   252   ; ccu63.c   166   ///  -----------------------------------------------------------------------
                   253   ; ccu63.c   167   ///  Configuration of CCU63 Timer 13:
                   254   ; ccu63.c   168   ///  -----------------------------------------------------------------------
                   255   ; ccu63.c   169   ///  - Timer 13 Input Clock factor (T13CLK) is 0
                   256   ; ccu63.c   170   ///  - prescaler factor is 0
                   257   ; ccu63.c   171   ///  - Timer 13 run bit is reset
                   258   ; ccu63.c   172   ///  - Trigger control is disabled
                   259   ; ccu63.c   173   ///  - No External run selection is selected.
                   260   ; ccu63.c   174   ///  - Timer mode is selected.
                   261   ; ccu63.c   175   ///  - 
                   262   ; ccu63.c   176   ///  - Single shot mode is disabled
                   263   ; ccu63.c   177   ///  - Interrupt on period match is disabled
                   264   ; ccu63.c   178   ///  - Interrupt on compare match is disabled
                   265   ; ccu63.c   179 
                   266   ; ccu63.c   180   CCU63_T13PR    =  0x0001;      // load CCU63 T13 period register
                   267           ?LINE   180
0016 E01C          268           MOV     R12,#01h
0018 F6FCB2EB      269           MOV     0EBB2h,R12
                   270   ; ccu63.c   181 
                   271   ; ccu63.c   182   CCU63_TCTR0    =  0x0080;      // load CCU63 timer control register 0
                   272           ?LINE   182
001C E6FC8000      273           MOV     R12,#080h
0020 F6FCACEB      274           MOV     0EBACh,R12
                   275   ; ccu63.c   183   CCU63_TCTR2    =  0x0020;      // load CCU63 timer control register 2
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   6
ccu63

 LOC CODE        LINE   SOURCELINE

                   276           ?LINE   183
0024 E6FC2000      277           MOV     R12,#020h
0028 F6FCAEEB      278           MOV     0EBAEh,R12
                   279   ; ccu63.c   184 
                   280   ; ccu63.c   185   ///  -----------------------------------------------------------------------
                   281   ; ccu63.c   186   ///  Configuration of Multi Channel Mode:
                   282   ; ccu63.c   187   ///  -----------------------------------------------------------------------
                   283   ; ccu63.c   188   ///  - Multi channel mode is disabled
                   284   ; ccu63.c   189 
                   285   ; ccu63.c   190 
                   286   ; ccu63.c   191   ///  -----------------------------------------------------------------------
                   287   ; ccu63.c   192   ///  Configuration of CCU63 Channel 0:
                   288   ; ccu63.c   193   ///  -----------------------------------------------------------------------
                   289   ; ccu63.c   194   ///  - Compare mode 1 is selected
                   290   ; ccu63.c   195   ///  - T12 modulation for output CC60 is enabled
                   291   ; ccu63.c   196   ///  - T13 modulation for output CC60 is disabled
                   292   ; ccu63.c   197   ///  - The trap functionality of the pin CC60 is disabled
                   293   ; ccu63.c   198   ///  - The compare output CC60 drives passive level while CC60ST is '0'
                   294   ; ccu63.c   199   ///  - The passive level of the output CC60 is '0'
                   295   ; ccu63.c   200   ///  - T12 modulation for output COUT60 is disabled
                   296   ; ccu63.c   201   ///  - T13 modulation for output COUT60 is disabled
                   297   ; ccu63.c   202   ///  - The trap functionality of the pin COUT60 is disabled
                   298   ; ccu63.c   203   ///  - The compare output COUT60 drives passive level while CC60ST is '1'
                   299   ; ccu63.c   204   ///  - The passive level of the output COUT60 is '0'
                   300   ; ccu63.c   205   ///  - Dead time generation is enabled
                   301   ; ccu63.c   206 
                   302   ; ccu63.c   207   ///  - Generation interrupt on flag ICC60R is disabled
                   303   ; ccu63.c   208   ///  - Generation interrupt on flag ICC60F is disabled
                   304   ; ccu63.c   209 
                   305   ; ccu63.c   210   CCU63_CC60SR   =  0x07F0;      // Load CCU63 capture/compare shadow 
                   306           ?LINE   210
002C E6FCF007      307           MOV     R12,#07F0h
0030 F6FCA0EB      308           MOV     0EBA0h,R12
                   309   ; ccu63.c   211                                  // register for channel 0
                   310   ; ccu63.c   212 
                   311   ; ccu63.c   213   ///  -----------------------------------------------------------------------
                   312   ; ccu63.c   214   ///  Configuration of CCU63 Channel 1:
                   313   ; ccu63.c   215   ///  -----------------------------------------------------------------------
                   314   ; ccu63.c   216   ///  - Compare mode 1 is selected
                   315   ; ccu63.c   217   ///  - T12 modulation for output CC61 is enabled
                   316   ; ccu63.c   218   ///  - T13 modulation for output CC61 is disabled
                   317   ; ccu63.c   219   ///  - The trap functionality of the pin CC61 is disabled
                   318   ; ccu63.c   220   ///  - The compare output CC61 drives passive level while CC61ST is '1'
                   319   ; ccu63.c   221   ///  - The passive level of the output CC61 is '0'
                   320   ; ccu63.c   222   ///  - T12 modulation for output COUT61 is enabled
                   321   ; ccu63.c   223   ///  - T13 modulation for output COUT61 is disabled
                   322   ; ccu63.c   224   ///  - The trap functionality of the pin COUT61 is disabled
                   323   ; ccu63.c   225   ///  - The compare output COUT61 drives passive level while CC61ST is '0'
                   324   ; ccu63.c   226   ///  - The passive level of the output COUT61 is '0'
                   325   ; ccu63.c   227   ///  - Dead time generation is disabled
                   326   ; ccu63.c   228 
                   327   ; ccu63.c   229   ///  - Generation interrupt on flag ICC61R is disabled
                   328   ; ccu63.c   230   ///  - Generation interrupt on flag ICC61F is disabled
                   329   ; ccu63.c   231 
                   330   ; ccu63.c   232   CCU63_CC61SR   =  0x07F0;      // Load CCU63 capture/compare shadow 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   7
ccu63

 LOC CODE        LINE   SOURCELINE

                   331           ?LINE   232
0034 E6FCF007      332           MOV     R12,#07F0h
0038 F6FCA2EB      333           MOV     0EBA2h,R12
                   334   ; ccu63.c   233                                  // register for channel 1
                   335   ; ccu63.c   234 
                   336   ; ccu63.c   235   ///  -----------------------------------------------------------------------
                   337   ; ccu63.c   236   ///  Configuration of CCU63 Channel 2:
                   338   ; ccu63.c   237   ///  -----------------------------------------------------------------------
                   339   ; ccu63.c   238   ///  - Channel 2 is disabled
                   340   ; ccu63.c   239   ///  - T12 modulation for output CC62 is disabled
                   341   ; ccu63.c   240   ///  - T13 modulation for output CC62 is disabled
                   342   ; ccu63.c   241   ///  - The trap functionality of the pin CC62 is disabled
                   343   ; ccu63.c   242   ///  - The passive level of the output CC62 is '0'
                   344   ; ccu63.c   243   ///  - The trap functionality of the pin COUT62 is disabled
                   345   ; ccu63.c   244   ///  - The passive level of the output COUT62 is '0'
                   346   ; ccu63.c   245   ///  - The passive level of the output COUT62 is '0'
                   347   ; ccu63.c   246 
                   348   ; ccu63.c   247   ///  - Generation interrupt on flag ICC62R is disabled
                   349   ; ccu63.c   248   ///  - Generation interrupt on flag ICC62F is disabled
                   350   ; ccu63.c   249 
                   351   ; ccu63.c   250   CCU63_CC62SR   =  0x07F0;      // Load CCU63 capture/compare shadow 
                   352           ?LINE   250
003C E6FCF007      353           MOV     R12,#07F0h
0040 F6FCA4EB      354           MOV     0EBA4h,R12
                   355   ; ccu63.c   251                                  // register for channel 2
                   356   ; ccu63.c   252 
                   357   ; ccu63.c   253   ///  -----------------------------------------------------------------------
                   358   ; ccu63.c   254   ///  Configuration of CCU63 Channel 3:
                   359   ; ccu63.c   255   ///  -----------------------------------------------------------------------
                   360   ; ccu63.c   256   ///  - T13 output is not inverted
                   361   ; ccu63.c   257 
                   362   ; ccu63.c   258 
                   363   ; ccu63.c   259   CCU63_CC63SR   =  0x0000;      // load CCU63 capture/compare shadow 
                   364           ?LINE   259
0044 E00C          365           MOV     R12,#00h
0046 F6FCB6EB      366           MOV     0EBB6h,R12
                   367   ; ccu63.c   260                                  // register for channel 3
                   368   ; ccu63.c   261 
                   369   ; ccu63.c   262 
                   370   ; ccu63.c   263   CCU63_T12DTC   =  0x0162;      // load CCU63 dead time control register for 
                   371           ?LINE   263
004A E6FC6201      372           MOV     R12,#0162h
004E F6FC94EB      373           MOV     0EB94h,R12
                   374   ; ccu63.c   264                                  // timer T12
                   375   ; ccu63.c   265 
                   376   ; ccu63.c   266   CCU63_T12MSEL  =  0x0011;      // load CCU63 T12 campture/compare mode 
                   377           ?LINE   266
0052 E6FC1100      378           MOV     R12,#011h
0056 F6FCC6EB      379           MOV     0EBC6h,R12
                   380   ; ccu63.c   267                                  // select register
                   381   ; ccu63.c   268 
                   382   ; ccu63.c   269   CCU63_CMPSTAT  =  0x0600;      // load CCU63 compare status register
                   383           ?LINE   269
005A E6FC0006      384           MOV     R12,#0600h
005E F6FCA8EB      385           MOV     0EBA8h,R12
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   8
ccu63

 LOC CODE        LINE   SOURCELINE

                   386   ; ccu63.c   270 
                   387   ; ccu63.c   271   CCU63_MODCTR   =  0x000D;      // load CCU63 modulation control register
                   388           ?LINE   271
0062 E0DC          389           MOV     R12,#0Dh
0064 F6FCC0EB      390           MOV     0EBC0h,R12
                   391   ; ccu63.c   272 
                   392   ; ccu63.c   273   ///  -----------------------------------------------------------------------
                   393   ; ccu63.c   274   ///  Configuration of CCU63 trap control:
                   394   ; ccu63.c   275   ///  -----------------------------------------------------------------------
                   395   ; ccu63.c   276   ///  - Trap can only be generated by SW by setting the bit TRPF
                   396   ; ccu63.c   277   ///  - The trap state is left when a zero-match of T12 (while counting up) 
                   397   ; ccu63.c   278   ///    is detected (synchronization to T12)
                   398   ; ccu63.c   279   ///  - Bit TRPF is automatically cleared by HW (according to TRPPEN, TRPM0 
                   399   ; ccu63.c   280   ///    and TRPM1)
                   400   ; ccu63.c   281   ///  - Trap interrupt is disabled
                   401   ; ccu63.c   282 
                   402   ; ccu63.c   283 
                   403   ; ccu63.c   284   ///  -----------------------------------------------------------------------
                   404   ; ccu63.c   285   ///  Configuration of CCU63 interrupt control:
                   405   ; ccu63.c   286   ///  -----------------------------------------------------------------------
                   406   ; ccu63.c   287   ///  - For channel 0 interrupts is node I0 selected
                   407   ; ccu63.c   288   ///  - For channel 1 interrupts is node I0 selected
                   408   ; ccu63.c   289   ///  - For channel 2 interrupts is node I0 selected
                   409   ; ccu63.c   290   ///  - For correct hall event interrupt is node I0 selected
                   410   ; ccu63.c   291   ///  - For error interrupts is node I0 selected
                   411   ; ccu63.c   292   ///  - For T12 interrupts is node I0 selected
                   412   ; ccu63.c   293   ///  - For T13 interrupts is node I0 selected
                   413   ; ccu63.c   294 
                   414   ; ccu63.c   295 
                   415   ; ccu63.c   296   CCU63_INP      =  0x0000;      // Load CCU63 capture/compare interrupt node 
                   416           ?LINE   296
0068 E00C          417           MOV     R12,#00h
006A F6FCD6EB      418           MOV     0EBD6h,R12
                   419   ; ccu63.c   297                                  // pointer register
                   420   ; ccu63.c   298 
                   421   ; ccu63.c   299   CCU63_IEN      =  0x0040;      // Load CCU63 capture/compare interrupt 
                   422           ?LINE   299
006E E6FC4000      423           MOV     R12,#040h
0072 F6FCD8EB      424           MOV     0EBD8h,R12
                   425   ; ccu63.c   300                                  // enable register
                   426   ; ccu63.c   301 
                   427   ; ccu63.c   302 
                   428   ; ccu63.c   303   ///  -----------------------------------------------------------------------
                   429   ; ccu63.c   304   ///  Configuration of the used CCU63 Channel Port Pins:
                   430   ; ccu63.c   305   ///  -----------------------------------------------------------------------
                   431   ; ccu63.c   306   ///  - P9.0 is used for CCU63 output(CC60)
                   432   ; ccu63.c   307   ///  - P9.1 is used for CCU63 output(CC61)
                   433   ; ccu63.c   308   ///  - P9.2 is used for CCU63 output(CC62)
                   434   ; ccu63.c   309   ///  - P9.3 is used for CCU63 output(COUT60)
                   435   ; ccu63.c   310   ///  - P9.4 is used for CCU63 output(COUT61)
                   436   ; ccu63.c   311   ///  - P9.5 is used for CCU63 output(COUT62)
                   437   ; ccu63.c   312 
                   438   ; ccu63.c   313   P9_IOCR00 = 0x0090;    //set direction register
                   439           ?LINE   313
0076 E6FC9000      440           MOV     R12,#090h
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:   9
ccu63

 LOC CODE        LINE   SOURCELINE

007A F6FC20E9      441           MOV     0E920h,R12
                   442   ; ccu63.c   314   P9_IOCR01 = 0x0090;    //set direction register
                   443           ?LINE   314
007E E6FC9000      444           MOV     R12,#090h
0082 F6FC22E9      445           MOV     0E922h,R12
                   446   ; ccu63.c   315   P9_IOCR02 = 0x0090;    //set direction register
                   447           ?LINE   315
0086 E6FC9000      448           MOV     R12,#090h
008A F6FC24E9      449           MOV     0E924h,R12
                   450   ; ccu63.c   316   P9_IOCR03 = 0x0090;    //set direction register
                   451           ?LINE   316
008E E6FC9000      452           MOV     R12,#090h
0092 F6FC26E9      453           MOV     0E926h,R12
                   454   ; ccu63.c   317   P9_IOCR04 = 0x0090;    //set direction register
                   455           ?LINE   317
0096 E6FC9000      456           MOV     R12,#090h
009A F6FC28E9      457           MOV     0E928h,R12
                   458   ; ccu63.c   318   P9_IOCR05 = 0x0090;    //set direction register
                   459           ?LINE   318
009E E6FC9000      460           MOV     R12,#090h
00A2 F6FC2AE9      461           MOV     0E92Ah,R12
                   462   ; ccu63.c   319 
                   463   ; ccu63.c   320   CCU63_PISELL   =  0x3FEA;      // Load CCU63 Port Input Selection register
                   464           ?LINE   320
00A6 E6FCEA3F      465           MOV     R12,#03FEAh
00AA F6FC84EB      466           MOV     0EB84h,R12
                   467   ; ccu63.c   321 
                   468   ; ccu63.c   322   ///  -----------------------------------------------------------------------
                   469   ; ccu63.c   323   ///  Configuration of the used CCU63 Channels Interrupts:
                   470   ; ccu63.c   324   ///  -----------------------------------------------------------------------
                   471   ; ccu63.c   325   ///  NodeI0 service request node configuration:
                   472   ; ccu63.c   326   ///  - NodeI0 interrupt priority level (ILVL) = 12
                   473   ; ccu63.c   327   ///  - NodeI0 interrupt group level (GLVL) = 0
                   474   ; ccu63.c   328   ///  - NodeI0 group priority extension (GPX) = 0
                   475   ; ccu63.c   329 
                   476   ; ccu63.c   330   CCU63_0IC      =  0x0070;     
                   477           ?LINE   330
00AE E6FC7000      478           MOV     R12,#070h
00B2 F6FC78F1      479           MOV     0F178h,R12
                   480   ; ccu63.c   331 
                   481   ; ccu63.c   332 
                   482   ; ccu63.c   333   ///  -----------------------------------------------------------------------
                   483   ; ccu63.c   334   ///  Configuration of T12, T13 ---- CCU63_TCTR4 Register:
                   484   ; ccu63.c   335   ///  -----------------------------------------------------------------------
                   485   ; ccu63.c   336   ///  - Enable shadow transfer of T12 and T13
                   486   ; ccu63.c   337   ///  - Timer 12 run bit is set
                   487   ; ccu63.c   338   ///  - Timer 13 run bit is reset
                   488   ; ccu63.c   339   CCU63_TCTR4    =  0x4042;      // load CCU63 timer control register 4
                   489           ?LINE   339
00B6 E6FC4240      490           MOV     R12,#04042h
00BA F6FCA6EB      491           MOV     0EBA6h,R12
                   492   ; ccu63.c   340 
                   493   ; ccu63.c   341 
                   494   ; ccu63.c   342   // USER CODE BEGIN (NodeI3,3)
                   495   ; ccu63.c   343 
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:  10
ccu63

 LOC CODE        LINE   SOURCELINE

                   496   ; ccu63.c   344   // USER CODE END
                   497   ; ccu63.c   345 
                   498   ; ccu63.c   346 } //  End of function CCU63_vInit
                   499           ?LINE   346
00BE DB00          500           RETS
                   501   _CCU63_vInit    ENDP
               R   502           ?SYMB   '',$,17,346
                   503   ; ccu63.c   347 
                   504   ; ccu63.c   348 
                   505   ; ccu63.c   349 //****************************************************************************
                   506   ; ccu63.c   350 // @Function      void CCU63_viNodeI0(void) 
                   507   ; ccu63.c   351 //
                   508   ; ccu63.c   352 //----------------------------------------------------------------------------
                   509   ; ccu63.c   353 // @Description   This is the interrupt service routine for the CCU63 node 
                   510   ; ccu63.c   354 //                I0. If the content of the corresponding compare timer 
                   511   ; ccu63.c   355 //                (configurable) equals the content of the capture/compare 
                   512   ; ccu63.c   356 //                register or if a capture event occurs at the associated 
                   513   ; ccu63.c   357 //                port pin, the interrupt request flag is set and an 
                   514   ; ccu63.c   358 //                interrupt is triggered (only if enabled).
                   515   ; ccu63.c   359 //                Please note that you have to add application specific code 
                   516   ; ccu63.c   360 //                to this function.
                   517   ; ccu63.c   361 //
                   518   ; ccu63.c   362 //----------------------------------------------------------------------------
                   519   ; ccu63.c   363 // @Returnvalue   None
                   520   ; ccu63.c   364 //
                   521   ; ccu63.c   365 //----------------------------------------------------------------------------
                   522   ; ccu63.c   366 // @Parameters    None
                   523   ; ccu63.c   367 //
                   524   ; ccu63.c   368 //----------------------------------------------------------------------------
                   525   ; ccu63.c   369 // @Date          22.09.2021
                   526   ; ccu63.c   370 //
                   527   ; ccu63.c   371 //****************************************************************************
                   528   ; ccu63.c   372 
                   529   ; ccu63.c   373 // USER CODE BEGIN (NodeI0,1)
                   530   ; ccu63.c   374 
                   531   ; ccu63.c   375 // USER CODE END
                   532   ; ccu63.c   376 
                   533   ; ccu63.c   377 _interrupt(CCU63_NodeI0_INT)  void CCU63_viNodeI0(void)
                   534   ; ccu63.c   378 {
               R   535           ?SYMB   'CCU63_viNodeI0',_CCU63_viNodeI0,37,1
                   536           ?SYMB   '',378,8,16
                   537   _CCU63_viNodeI0 PROC TASK CCU63_TASK INTNO CCU63_INUM = 03Ch
                   538           ?LINE   378
                   539           ?SYMB   '',00H,95,0
00C0 F6F00000  R   540           MOV     CCU63_RB,R0
00C4 C6080000  R   541           SCXT    CP,#CCU63_RB
00C8 C6871000      542           SCXT    MDC,#010h
00CC EC00          543           PUSH    DPP0
00CE E6000000  R   544           MOV     DPP0,#PAG ?BASE_DPP0
00D2 CC00          545           NOP
00D4 EC02          546           PUSH    DPP2
00D6 E6020000  R   547           MOV     DPP2,#PAG ?BASE_DPP2
00DA CC00          548           NOP
00DC EC06          549           PUSH    MDH
00DE EC07          550           PUSH    MDL
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:  11
ccu63

 LOC CODE        LINE   SOURCELINE

00E0 ECEF          551           PUSH    MSW
00E2 EC2E          552           PUSH    MAL
00E4 EC2F          553           PUSH    MAH
00E6 ECEE          554           PUSH    MCW
00E8 C6ED0000      555           SCXT    MRW,#00h
00EC EC84          556           PUSH    IDX0
00EE EC85          557           PUSH    IDX1
00F0 D180          558           EXTR    #01h
00F2 EC00     1    559           PUSH    QX0
00F4 D180          560           EXTR    #01h
00F6 EC01     1    561           PUSH    QX1
00F8 D180          562           EXTR    #01h
00FA EC02     1    563           PUSH    QR0
00FC D180          564           EXTR    #01h
00FE EC03     1    565           PUSH    QR1
                   566   ; Locals:
                   567   ; 
                   568   ; Statics:
                   569   ; 
                   570   ; CSEs:
                   571   ; 
                   572   ; ccu63.c   379   // USER CODE BEGIN (NodeI0,2)
                   573   ; ccu63.c   380 
                   574   ; ccu63.c   381   // USER CODE END
                   575   ; ccu63.c   382 
                   576   ; ccu63.c   383   if(CCU63_IS & 0x0040)  // if CCU63_IS_T12OM
                   577           ?LINE   383
0100 F2FCD0EB      578           MOV     R12,0EBD0h
0104 9AFC0560      579           JNB     R12.6,_4
                   580   ; ccu63.c   384   {
                   581   ; ccu63.c   385     // Timer T12 one match detection
                   582   ; ccu63.c   386 
                   583   ; ccu63.c   387     // USER CODE BEGIN (NodeI0,20)
                   584   ; ccu63.c   388 
                   585   ; ccu63.c   389     // USER CODE END
                   586   ; ccu63.c   390 
                   587   ; ccu63.c   391     CCU63_ISR |= 0x0040;  // clear flag CCU63_IS_T12OM
                   588           ?LINE   391
0108 E6FCD4EB      589           MOV     R12,#0EBD4h
010C A8DC          590           MOV     R13,[R12]
010E 6FFD          591           BSET    R13.6
0110 B8DC          592           MOV     [R12],R13
                   593   ; ccu63.c   392   }
                   594           ?LINE   392
0112               595   _4:
                   596   ; ccu63.c   393 
                   597   ; ccu63.c   394 
                   598   ; ccu63.c   395 } //  End of function CCU63_viNodeI0
                   599           ?LINE   395
0112 D180          600           EXTR    #01h
0114 FC03     1    601           POP     QR1
0116 D180          602           EXTR    #01h
0118 FC02     1    603           POP     QR0
011A D180          604           EXTR    #01h
011C FC01     1    605           POP     QX1
TASKING C166/ST10 assembler v8.7r1 Build 306                                Date: Sep 22 2021  Time: 17:20:20  Page:  12
ccu63

 LOC CODE        LINE   SOURCELINE

011E D180          606           EXTR    #01h
0120 FC00     1    607           POP     QX0
0122 FC85          608           POP     IDX1
0124 FC84          609           POP     IDX0
0126 FCED          610           POP     MRW
0128 FCEE          611           POP     MCW
012A FC2F          612           POP     MAH
012C FC2E          613           POP     MAL
012E FCEF          614           POP     MSW
0130 FC07          615           POP     MDL
0132 FC06          616           POP     MDH
0134 FC02          617           POP     DPP2
0136 FC00          618           POP     DPP0
0138 FC87          619           POP     MDC
013A FC08          620           POP     CP
                   621           ?LINE   395
013C FB88          622           RETI
                   623   _CCU63_viNodeI0 ENDP
               R   624           ?SYMB   '',$,17,395
                   625   ; ccu63.c   396 
                   626   ; ccu63.c   397 
                   627   ; ccu63.c   398 
                   628   ; ccu63.c   399 
                   629   ; ccu63.c   400 // USER CODE BEGIN (CCU63_General,10)
                   630   ; ccu63.c   401 
                   631   ; ccu63.c   402 // USER CODE END
                   632   ; ccu63.c   403 
                   633   CCU63_1_PR      ENDS
                   634   
                   635   CCU63_RB        REGDEF  R0-R15
                   636           END

total errors: 0, warnings: 0

